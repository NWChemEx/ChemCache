/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_ptable_configs.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_ptable_configs.py is run.
 */

#include "electronic_configurations.hpp"
#include <simde/simde.hpp>

namespace chemcache {

using elec_config_pt = simde::ElecConfigFromZ;
using elec_config_t  = std::vector<simde::type::size>;

MODULE_CTOR(elec_configs) { satisfies_property_type<elec_config_pt>(); }

MODULE_RUN(elec_configs) {
    const auto& [Z] = elec_config_pt::unwrap_inputs(inputs);
    auto rv         = results();

    switch(Z) {
        case(1): {
            elec_config_t elec_config{1, 0, 0, 0};
            return elec_config_pt::wrap_results(rv, elec_config);
        }
        case(8): {
            elec_config_t elec_config{4, 4, 0, 0};
            return elec_config_pt::wrap_results(rv, elec_config);
        }
        default: {
            throw std::out_of_range("Atomic Density not available for Z");
        }
    }
}

} // namespace chemcache
