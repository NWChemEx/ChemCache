/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pv_oparen_t_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pv_oparen_t_plus_d_cparen_z_3() {
    // Basis Set name and origin point
    std::string name("aug-cc-pv(t+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{1.3300000000e-04, 1.0250000000e-03, 5.2720000000e-03,
                           2.0929000000e-02, 6.6340000000e-02, 1.6577500000e-01,
                           3.1503800000e-01, 3.9352300000e-01, 1.9087000000e-01,
                           5.4140000000e-03, -1.3280000000e-03},
                 doubles_t{5.9880000000e+03, 8.9890000000e+02, 2.0590000000e+02,
                           5.9240000000e+01, 1.9870000000e+01, 7.4060000000e+00,
                           2.9300000000e+00, 1.1890000000e+00, 4.7980000000e-01,
                           7.5090000000e-02, 2.8320000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{7.5090000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.1000000000e-05, -1.6100000000e-04, -8.2000000000e-04,
                -3.3260000000e-03, -1.0519000000e-02, -2.8097000000e-02,
                -5.5936000000e-02, -9.9237000000e-02, -1.1218900000e-01,
                5.6788900000e-01, 5.3038200000e-01},
      doubles_t{5.9880000000e+03, 8.9890000000e+02, 2.0590000000e+02,
                5.9240000000e+01, 1.9870000000e+01, 7.4060000000e+00,
                2.9300000000e+00, 1.1890000000e+00, 4.7980000000e-01,
                7.5090000000e-02, 2.8320000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.8320000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{7.6000000000e-03}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.5780000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{8.6300000000e-03, 4.7538000000e-02, 2.0977200000e-01,
                           5.2852200000e-01, 3.8274400000e-01},
                 doubles_t{3.2660000000e+00, 6.5110000000e-01, 1.6960000000e-01,
                           5.5780000000e-02, 2.0500000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.0500000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{9.1000000000e-03}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9000000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{7.2500000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.2800000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2700000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{8.1200000000e-02}));
    return abs_t(name, 3, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pv_oparen_t_plus_d_cparen_z_3

} // namespace chemcache
