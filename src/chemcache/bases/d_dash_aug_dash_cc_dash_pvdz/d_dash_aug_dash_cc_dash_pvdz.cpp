/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "../bases.hpp"
#include "d_dash_aug_dash_cc_dash_pvdz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using atomic_basis_pt = simde::AtomicBasisSetFromZ;
using abs_t           = simde::type::atomic_basis_set;
using shell_t         = simde::type::shell;
using center_t        = simde::type::point;
using shells_t        = std::vector<shell_t>;
using doubles_t       = std::vector<double>;
using pure_t          = chemist::ShellType;

static constexpr auto module_desc = R"(
d-aug-cc-pvdz atomic basis set
---------------------------------

This module returns the atomic basis set associated with an atomic number.
This module was autogenerated.
)";

MODULE_CTOR(d_dash_aug_dash_cc_dash_pvdz_atom_basis) {
    description(module_desc);
    satisfies_property_type<atomic_basis_pt>();
}

MODULE_RUN(d_dash_aug_dash_cc_dash_pvdz_atom_basis) {
    const auto& [Z] = atomic_basis_pt::unwrap_inputs(inputs);
    auto rv         = results();

    switch(Z) {
        case(1): {
            return atomic_basis_pt::wrap_results(
              rv, d_dash_aug_dash_cc_dash_pvdz_1());
        }
        case(2): {
            return atomic_basis_pt::wrap_results(
              rv, d_dash_aug_dash_cc_dash_pvdz_2());
        }
        case(5): {
            return atomic_basis_pt::wrap_results(
              rv, d_dash_aug_dash_cc_dash_pvdz_5());
        }
        case(6): {
            return atomic_basis_pt::wrap_results(
              rv, d_dash_aug_dash_cc_dash_pvdz_6());
        }
        case(7): {
            return atomic_basis_pt::wrap_results(
              rv, d_dash_aug_dash_cc_dash_pvdz_7());
        }
        case(8): {
            return atomic_basis_pt::wrap_results(
              rv, d_dash_aug_dash_cc_dash_pvdz_8());
        }
        case(9): {
            return atomic_basis_pt::wrap_results(
              rv, d_dash_aug_dash_cc_dash_pvdz_9());
        }
        case(10): {
            return atomic_basis_pt::wrap_results(
              rv, d_dash_aug_dash_cc_dash_pvdz_10());
        }
        default: {
            throw std::out_of_range("Basis Set not available for Z");
        }
    }
}

} // namespace chemcache
