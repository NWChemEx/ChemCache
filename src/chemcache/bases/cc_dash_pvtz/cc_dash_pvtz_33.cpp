/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_33() {
    // Basis Set name and origin point
    std::string name("cc-pvtz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{6.8000000000e-06,  5.2800000000e-05,  2.7740000000e-04,
                1.1702000000e-03,  4.2421000000e-03,  1.3655700000e-02,
                3.9339900000e-02,  9.9929200000e-02,  2.1215550000e-01,
                3.3638660000e-01,  3.1551250000e-01,  1.1813120000e-01,
                8.0076000000e-03,  3.2930000000e-04,  -1.5230000000e-04,
                2.4700000000e-05,  -3.6600000000e-05, 1.4500000000e-05,
                -9.4000000000e-06, 2.6000000000e-06},
      doubles_t{8.4823400000e+06, 1.2701510000e+06, 2.8905700000e+05,
                8.1879850000e+04, 2.6716560000e+04, 9.6475840000e+03,
                3.7641190000e+03, 1.5615660000e+03, 6.8081470000e+02,
                3.0924120000e+02, 1.4525740000e+02, 6.9739050000e+01,
                3.1770320000e+01, 1.5391760000e+01, 7.3415260000e+00,
                3.3237160000e+00, 1.4858670000e+00, 4.2108600000e-01,
                2.1150000000e-01, 8.8974000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.1000000000e-06, -1.6500000000e-05, -8.6600000000e-05,
                -3.6530000000e-04, -1.3309000000e-03, -4.3093000000e-03,
                -1.2697300000e-02, -3.3616000000e-02, -7.8947000000e-02,
                -1.5144580000e-01, -2.0420140000e-01, -5.5736700000e-02,
                4.1876070000e-01,  5.7587620000e-01,  1.6968420000e-01,
                6.0662000000e-03,  1.7605000000e-03,  -3.6600000000e-04,
                2.3160000000e-04,  -6.6100000000e-05},
      doubles_t{8.4823400000e+06, 1.2701510000e+06, 2.8905700000e+05,
                8.1879850000e+04, 2.6716560000e+04, 9.6475840000e+03,
                3.7641190000e+03, 1.5615660000e+03, 6.8081470000e+02,
                3.0924120000e+02, 1.4525740000e+02, 6.9739050000e+01,
                3.1770320000e+01, 1.5391760000e+01, 7.3415260000e+00,
                3.3237160000e+00, 1.4858670000e+00, 4.2108600000e-01,
                2.1150000000e-01, 8.8974000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{8.0000000000e-07,  6.4000000000e-06,  3.3700000000e-05,
                1.4230000000e-04,  5.1880000000e-04,  1.6802000000e-03,
                4.9677000000e-03,  1.3211500000e-02,  3.1456600000e-02,
                6.1844600000e-02,  8.7956600000e-02,  2.5754800000e-02,
                -2.4554590000e-01, -5.0905720000e-01, -5.5574900000e-02,
                7.0837960000e-01,  5.2310270000e-01,  3.4817600000e-02,
                -1.1117600000e-02, 2.3636000000e-03},
      doubles_t{8.4823400000e+06, 1.2701510000e+06, 2.8905700000e+05,
                8.1879850000e+04, 2.6716560000e+04, 9.6475840000e+03,
                3.7641190000e+03, 1.5615660000e+03, 6.8081470000e+02,
                3.0924120000e+02, 1.4525740000e+02, 6.9739050000e+01,
                3.1770320000e+01, 1.5391760000e+01, 7.3415260000e+00,
                3.3237160000e+00, 1.4858670000e+00, 4.2108600000e-01,
                2.1150000000e-01, 8.8974000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.2108600000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.0000000000e-07, -1.8000000000e-06, -9.3000000000e-06,
                -3.9200000000e-05, -1.4290000000e-04, -4.6290000000e-04,
                -1.3687000000e-03, -3.6440000000e-03, -8.6884000000e-03,
                -1.7155600000e-02, -2.4551400000e-02, -7.3524000000e-03,
                7.2008700000e-02,  1.5762540000e-01,  1.4207400000e-02,
                -2.8515930000e-01, -3.8853470000e-01, 2.6910610000e-01,
                6.4953370000e-01,  2.9740470000e-01},
      doubles_t{8.4823400000e+06, 1.2701510000e+06, 2.8905700000e+05,
                8.1879850000e+04, 2.6716560000e+04, 9.6475840000e+03,
                3.7641190000e+03, 1.5615660000e+03, 6.8081470000e+02,
                3.0924120000e+02, 1.4525740000e+02, 6.9739050000e+01,
                3.1770320000e+01, 1.5391760000e+01, 7.3415260000e+00,
                3.3237160000e+00, 1.4858670000e+00, 4.2108600000e-01,
                2.1150000000e-01, 8.8974000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{8.8974000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{4.5990000000e-04, 3.9823000000e-03, 2.1463800000e-02,
                           8.2461700000e-02, 2.2389020000e-01, 3.9207040000e-01,
                           3.5422380000e-01, 1.0486410000e-01, 3.3664000000e-03,
                           1.8495000000e-03, -4.4960000000e-04,
                           2.2970000000e-04, -7.1900000000e-05},
                 doubles_t{7.4238610000e+03, 1.7595170000e+03, 5.7022920000e+02,
                           2.1658000000e+02, 9.0734250000e+01, 4.0308790000e+01,
                           1.8555500000e+01, 8.3965430000e+00, 3.7673670000e+00,
                           1.6297010000e+00, 5.6826300000e-01, 2.2250300000e-01,
                           8.0405000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.7940000000e-04, -1.5641000000e-03, -8.4999000000e-03,
                -3.3632700000e-02, -9.5322800000e-02, -1.7936260000e-01,
                -1.4666820000e-01, 1.9660160000e-01, 5.3720880000e-01,
                3.8573610000e-01, 4.7094700000e-02, -5.4006000000e-03,
                1.5305000000e-03},
      doubles_t{7.4238610000e+03, 1.7595170000e+03, 5.7022920000e+02,
                2.1658000000e+02, 9.0734250000e+01, 4.0308790000e+01,
                1.8555500000e+01, 8.3965430000e+00, 3.7673670000e+00,
                1.6297010000e+00, 5.6826300000e-01, 2.2250300000e-01,
                8.0405000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.6826300000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{3.9900000000e-05, 3.4880000000e-04, 1.8953000000e-03,
                7.5325000000e-03, 2.1431500000e-02, 4.0780700000e-02,
                3.2524900000e-02, -5.4883200000e-02, -1.5119220000e-01,
                -1.2490110000e-01, 2.0891540000e-01, 5.8552930000e-01,
                3.6446600000e-01},
      doubles_t{7.4238610000e+03, 1.7595170000e+03, 5.7022920000e+02,
                2.1658000000e+02, 9.0734250000e+01, 4.0308790000e+01,
                1.8555500000e+01, 8.3965430000e+00, 3.7673670000e+00,
                1.6297010000e+00, 5.6826300000e-01, 2.2250300000e-01,
                8.0405000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.0405000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.6840000000e-03, 1.4158600000e-02, 6.2825900000e-02,
                           1.7849930000e-01, 3.2094520000e-01, 3.7735150000e-01,
                           2.7502310000e-01, 8.2883400000e-02},
                 doubles_t{3.2101960000e+02, 9.6249310000e+01, 3.6644960000e+01,
                           1.5493960000e+01, 6.8911380000e+00, 3.0548310000e+00,
                           1.3142410000e+00, 5.1343000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.1343000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8770000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{4.1580000000e-01}));
    return abs_t(name, 33, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_33

} // namespace chemcache
