/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_35() {
    // Basis Set name and origin point
    std::string name("cc-pvtz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{5.9000000000e-06,  4.6100000000e-05,  2.4220000000e-04,
                1.0226000000e-03,  3.7113000000e-03,  1.1978500000e-02,
                3.4692700000e-02,  8.9123900000e-02,  1.9345570000e-01,
                3.2090190000e-01,  3.2992330000e-01,  1.4941210000e-01,
                1.4993800000e-02,  -9.1650000000e-04, 4.3800000000e-04,
                -2.3980000000e-04, 7.3600000000e-05,  -3.6700000000e-05,
                2.3900000000e-05,  -5.6000000000e-06},
      doubles_t{1.0639000000e+07, 1.5934000000e+06, 3.6261000000e+05,
                1.0270000000e+05, 3.3501000000e+04, 1.2093000000e+04,
                4.7159000000e+03, 1.9556000000e+03, 8.5261000000e+02,
                3.8767000000e+02, 1.8268000000e+02, 8.8245000000e+01,
                3.9263000000e+01, 1.9234000000e+01, 9.4057000000e+00,
                4.1601000000e+00, 1.8995000000e+00, 6.0472000000e-01,
                3.0114000000e-01, 1.2515000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.9000000000e-06, -1.4500000000e-05, -7.6100000000e-05,
                -3.2100000000e-04, -1.1709000000e-03, -3.7968000000e-03,
                -1.1230700000e-02, -2.9927700000e-02, -7.1270600000e-02,
                -1.4031360000e-01, -2.0307630000e-01, -9.6098500000e-02,
                3.5580860000e-01,  5.9217920000e-01,  2.2159770000e-01,
                1.3764800000e-02,  8.3950000000e-04,  -4.5100000000e-05,
                -8.5000000000e-06, -1.2400000000e-05},
      doubles_t{1.0639000000e+07, 1.5934000000e+06, 3.6261000000e+05,
                1.0270000000e+05, 3.3501000000e+04, 1.2093000000e+04,
                4.7159000000e+03, 1.9556000000e+03, 8.5261000000e+02,
                3.8767000000e+02, 1.8268000000e+02, 8.8245000000e+01,
                3.9263000000e+01, 1.9234000000e+01, 9.4057000000e+00,
                4.1601000000e+00, 1.8995000000e+00, 6.0472000000e-01,
                3.0114000000e-01, 1.2515000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{7.0000000000e-07,  5.7000000000e-06,  3.0300000000e-05,
                1.2750000000e-04,  4.6590000000e-04,  1.5096000000e-03,
                4.4852000000e-03,  1.1983500000e-02,  2.8957100000e-02,
                5.8156600000e-02,  8.8813300000e-02,  4.4524400000e-02,
                -2.0603870000e-01, -5.1270170000e-01, -1.5093490000e-01,
                6.7892030000e-01,  5.8176970000e-01,  4.6755500000e-02,
                -1.1182500000e-02, 2.4402000000e-03},
      doubles_t{1.0639000000e+07, 1.5934000000e+06, 3.6261000000e+05,
                1.0270000000e+05, 3.3501000000e+04, 1.2093000000e+04,
                4.7159000000e+03, 1.9556000000e+03, 8.5261000000e+02,
                3.8767000000e+02, 1.8268000000e+02, 8.8245000000e+01,
                3.9263000000e+01, 1.9234000000e+01, 9.4057000000e+00,
                4.1601000000e+00, 1.8995000000e+00, 6.0472000000e-01,
                3.0114000000e-01, 1.2515000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{6.0472000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.0000000000e-07, -1.8000000000e-06, -9.3000000000e-06,
                -3.9100000000e-05, -1.4280000000e-04, -4.6280000000e-04,
                -1.3750000000e-03, -3.6784000000e-03, -8.8981000000e-03,
                -1.7952900000e-02, -2.7573200000e-02, -1.4095300000e-02,
                6.7256100000e-02,  1.7669280000e-01,  5.2886100000e-02,
                -3.0759550000e-01, -4.7006580000e-01, 2.5587610000e-01,
                6.9803410000e-01,  2.9672560000e-01},
      doubles_t{1.0639000000e+07, 1.5934000000e+06, 3.6261000000e+05,
                1.0270000000e+05, 3.3501000000e+04, 1.2093000000e+04,
                4.7159000000e+03, 1.9556000000e+03, 8.5261000000e+02,
                3.8767000000e+02, 1.8268000000e+02, 8.8245000000e+01,
                3.9263000000e+01, 1.9234000000e+01, 9.4057000000e+00,
                4.1601000000e+00, 1.8995000000e+00, 6.0472000000e-01,
                3.0114000000e-01, 1.2515000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2515000000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{4.3570000000e-04, 3.7815000000e-03, 2.0478200000e-02,
                           7.9283400000e-02, 2.1784730000e-01, 3.8785850000e-01,
                           3.5943500000e-01, 1.1219950000e-01, 4.3874000000e-03,
                           1.7809000000e-03, -4.5760000000e-04,
                           2.1220000000e-04, -7.3400000000e-05},
                 doubles_t{8.6765000000e+03, 2.0559000000e+03, 6.6623000000e+02,
                           2.5310000000e+02, 1.0612000000e+02, 4.7242000000e+01,
                           2.1825000000e+01, 9.9684000000e+00, 4.5171000000e+00,
                           1.9982000000e+00, 7.0988000000e-01, 2.8145000000e-01,
                           1.0204000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.7480000000e-04, -1.5263000000e-03, -8.3399000000e-03,
                -3.3220300000e-02, -9.5418000000e-02, -1.8240260000e-01,
                -1.5583080000e-01, 1.8678990000e-01, 5.4277330000e-01,
                3.8733090000e-01, 4.5306900000e-02, -4.3784000000e-03,
                1.8111000000e-03},
      doubles_t{8.6765000000e+03, 2.0559000000e+03, 6.6623000000e+02,
                2.5310000000e+02, 1.0612000000e+02, 4.7242000000e+01,
                2.1825000000e+01, 9.9684000000e+00, 4.5171000000e+00,
                1.9982000000e+00, 7.0988000000e-01, 2.8145000000e-01,
                1.0204000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{7.0988000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.5100000000e-05, 3.9640000000e-04, 2.1555000000e-03,
                8.6720000000e-03, 2.4868000000e-02, 4.8547200000e-02,
                3.9615600000e-02, -6.0574900000e-02, -1.8716990000e-01,
                -1.3777570000e-01, 2.9280210000e-01, 5.7608960000e-01,
                3.0786170000e-01},
      doubles_t{8.6765000000e+03, 2.0559000000e+03, 6.6623000000e+02,
                2.5310000000e+02, 1.0612000000e+02, 4.7242000000e+01,
                2.1825000000e+01, 9.9684000000e+00, 4.5171000000e+00,
                1.9982000000e+00, 7.0988000000e-01, 2.8145000000e-01,
                1.0204000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0204000000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.4732000000e-03, 1.2672500000e-02, 5.8045100000e-02,
                           1.7051030000e-01, 3.1859580000e-01, 3.8450230000e-01,
                           2.7377370000e-01, 7.4396700000e-02},
                 doubles_t{4.0383000000e+02, 1.2117000000e+02, 4.6345000000e+01,
                           1.9721000000e+01, 8.8624000000e+00, 3.9962000000e+00,
                           1.7636000000e+00, 7.0619000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{7.0619000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.6390000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{5.5150000000e-01}));
    return abs_t(name, 35, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_35

} // namespace chemcache
