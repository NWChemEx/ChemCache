/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_31() {
    // Basis Set name and origin point
    std::string name("cc-pvtz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{8.0000000000e-06,  6.2200000000e-05,  3.2700000000e-04,
                1.3794000000e-03,  4.9993000000e-03,  1.6060500000e-02,
                4.6012400000e-02,  1.1522240000e-01,  2.3739210000e-01,
                3.5319890000e-01,  2.9155000000e-01,  8.1212900000e-02,
                7.6550000000e-04,  1.6124000000e-03,  -7.5300000000e-04,
                3.1340000000e-04,  -1.3060000000e-04, 5.1300000000e-05,
                -3.7900000000e-05, 1.0900000000e-05},
      doubles_t{6.5581570000e+06, 9.8202530000e+05, 2.2346770000e+05,
                6.3288290000e+04, 2.0642940000e+04, 7.4505220000e+03,
                2.9050740000e+03, 1.2042100000e+03, 5.2430450000e+02,
                2.3746560000e+02, 1.1057870000e+02, 5.1374620000e+01,
                2.4440850000e+01, 1.1768590000e+01, 5.3421190000e+00,
                2.4950360000e+00, 1.0987730000e+00, 2.6018000000e-01,
                1.2707900000e-01, 5.4408000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.5000000000e-06, -1.9300000000e-05, -1.0140000000e-04,
                -4.2810000000e-04, -1.5582000000e-03, -5.0469000000e-03,
                -1.4805600000e-02, -3.8948200000e-02, -8.9683200000e-02,
                -1.6640760000e-01, -2.0040100000e-01, 1.1494300000e-02,
                4.9581340000e-01,  5.2955500000e-01,  1.1101850000e-01,
                -7.0000000000e-04, 2.2283000000e-03,  -5.0140000000e-04,
                3.7090000000e-04,  -1.0700000000e-04},
      doubles_t{6.5581570000e+06, 9.8202530000e+05, 2.2346770000e+05,
                6.3288290000e+04, 2.0642940000e+04, 7.4505220000e+03,
                2.9050740000e+03, 1.2042100000e+03, 5.2430450000e+02,
                2.3746560000e+02, 1.1057870000e+02, 5.1374620000e+01,
                2.4440850000e+01, 1.1768590000e+01, 5.3421190000e+00,
                2.4950360000e+00, 1.0987730000e+00, 2.6018000000e-01,
                1.2707900000e-01, 5.4408000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{9.0000000000e-07,  7.4000000000e-06,  3.8700000000e-05,
                1.6330000000e-04,  5.9440000000e-04,  1.9292000000e-03,
                5.6689000000e-03,  1.5028200000e-02,  3.5022200000e-02,
                6.7113500000e-02,  8.5015600000e-02,  -4.7212000000e-03,
                -3.0167370000e-01, -4.8254890000e-01, 8.9169500000e-02,
                7.2878300000e-01,  4.2885420000e-01,  2.0724900000e-02,
                -8.7128000000e-03, 2.0365000000e-03},
      doubles_t{6.5581570000e+06, 9.8202530000e+05, 2.2346770000e+05,
                6.3288290000e+04, 2.0642940000e+04, 7.4505220000e+03,
                2.9050740000e+03, 1.2042100000e+03, 5.2430450000e+02,
                2.3746560000e+02, 1.1057870000e+02, 5.1374620000e+01,
                2.4440850000e+01, 1.1768590000e+01, 5.3421190000e+00,
                2.4950360000e+00, 1.0987730000e+00, 2.6018000000e-01,
                1.2707900000e-01, 5.4408000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2707900000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.0000000000e-07,  1.7000000000e-06,  9.0000000000e-06,
                3.8000000000e-05,  1.3820000000e-04,  4.4890000000e-04,
                1.3188000000e-03,  3.5016000000e-03,  8.1673000000e-03,
                1.5733800000e-02,  2.0028400000e-02,  -1.0136000000e-03,
                -7.5016200000e-02, -1.2579800000e-01, 3.0085700000e-02,
                2.4881690000e-01,  2.8437060000e-01,  -3.1105940000e-01,
                -5.8620620000e-01, -2.7838240000e-01},
      doubles_t{6.5581570000e+06, 9.8202530000e+05, 2.2346770000e+05,
                6.3288290000e+04, 2.0642940000e+04, 7.4505220000e+03,
                2.9050740000e+03, 1.2042100000e+03, 5.2430450000e+02,
                2.3746560000e+02, 1.1057870000e+02, 5.1374620000e+01,
                2.4440850000e+01, 1.1768590000e+01, 5.3421190000e+00,
                2.4950360000e+00, 1.0987730000e+00, 2.6018000000e-01,
                1.2707900000e-01, 5.4408000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{5.4408000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{3.1690000000e-04, 2.7648000000e-03, 1.5120400000e-02,
                           5.9958300000e-02, 1.7331200000e-01, 3.4108200000e-01,
                           3.8969670000e-01, 1.8398170000e-01, 2.1889600000e-02,
                           1.1608000000e-03, 2.7350000000e-04, 1.2600000000e-05,
                           -4.6000000000e-06},
                 doubles_t{8.0501670000e+03, 1.9075360000e+03, 6.1862750000e+02,
                           2.3532420000e+02, 9.8899650000e+01, 4.4248220000e+01,
                           2.0617430000e+01, 9.7805160000e+00, 4.4412380000e+00,
                           1.9640450000e+00, 8.3357800000e-01, 1.9344500000e-01,
                           5.6117000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.2030000000e-04, -1.0492000000e-03, -5.8102000000e-03,
                -2.3434500000e-02, -7.0827000000e-02, -1.4655110000e-01,
                -1.7696600000e-01, 3.6382100000e-02, 4.2328480000e-01,
                4.9525860000e-01, 1.7974280000e-01, 6.2132000000e-03,
                -7.4060000000e-04},
      doubles_t{8.0501670000e+03, 1.9075360000e+03, 6.1862750000e+02,
                2.3532420000e+02, 9.8899650000e+01, 4.4248220000e+01,
                2.0617430000e+01, 9.7805160000e+00, 4.4412380000e+00,
                1.9640450000e+00, 8.3357800000e-01, 1.9344500000e-01,
                5.6117000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9344500000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.0000000000e-05, 1.6890000000e-04, 9.6680000000e-04,
                3.7797000000e-03, 1.1908200000e-02, 2.3569300000e-02,
                3.1423300000e-02, -1.3618800000e-02, -7.3400300000e-02,
                -1.2647850000e-01, 1.5857900000e-02, 5.0737570000e-01,
                6.0026060000e-01},
      doubles_t{8.0501670000e+03, 1.9075360000e+03, 6.1862750000e+02,
                2.3532420000e+02, 9.8899650000e+01, 4.4248220000e+01,
                2.0617430000e+01, 9.7805160000e+00, 4.4412380000e+00,
                1.9640450000e+00, 8.3357800000e-01, 1.9344500000e-01,
                5.6117000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.6117000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{2.0270000000e-03, 1.6508800000e-02, 7.0382300000e-02,
                           1.9114300000e-01, 3.2540920000e-01, 3.6781990000e-01,
                           2.7446850000e-01, 9.5623200000e-02},
                 doubles_t{2.4414740000e+02, 7.3067590000e+01, 2.7592080000e+01,
                           1.1546520000e+01, 5.0486280000e+00, 2.1784650000e+00,
                           9.0025300000e-01, 3.3732700000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3732700000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1690000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.8810000000e-01}));
    return abs_t(name, 31, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_31

} // namespace chemcache
