/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_36() {
    // Basis Set name and origin point
    std::string name("cc-pvtz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{5.6000000000e-06,  4.3800000000e-05,  2.3050000000e-04,
                9.7330000000e-04,  3.5337000000e-03,  1.1416700000e-02,
                3.3132500000e-02,  8.5446400000e-02,  1.8691240000e-01,
                3.1497610000e-01,  3.3433340000e-01,  1.6088100000e-01,
                1.7843500000e-02,  -1.3793000000e-03, 6.5720000000e-04,
                -3.3880000000e-04, 1.2110000000e-04,  -5.8900000000e-05,
                3.6600000000e-05,  -8.6000000000e-06},
      doubles_t{1.1718110000e+07, 1.7546040000e+06, 3.9928130000e+05,
                1.1308460000e+05, 3.6885930000e+04, 1.3312210000e+04,
                5.1899880000e+03, 2.1516600000e+03, 9.3803250000e+02,
                4.2655730000e+02, 2.0106660000e+02, 9.7097610000e+01,
                4.2998720000e+01, 2.1177070000e+01, 1.0426750000e+01,
                4.5850080000e+00, 2.1176030000e+00, 7.0705700000e-01,
                3.4922500000e-01, 1.4482100000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.8000000000e-06, -1.3800000000e-05, -7.2600000000e-05,
                -3.0630000000e-04, -1.1177000000e-03, -3.6270000000e-03,
                -1.0743200000e-02, -2.8699200000e-02, -6.8667900000e-02,
                -1.3651550000e-01, -2.0224580000e-01, -1.0905690000e-01,
                3.3187680000e-01,  5.9482500000e-01,  2.4248250000e-01,
                1.7224100000e-02,  3.6850000000e-04,  1.1040000000e-04,
                -1.1530000000e-04, 9.0000000000e-06},
      doubles_t{1.1718110000e+07, 1.7546040000e+06, 3.9928130000e+05,
                1.1308460000e+05, 3.6885930000e+04, 1.3312210000e+04,
                5.1899880000e+03, 2.1516600000e+03, 9.3803250000e+02,
                4.2655730000e+02, 2.0106660000e+02, 9.7097610000e+01,
                4.2998720000e+01, 2.1177070000e+01, 1.0426750000e+01,
                4.5850080000e+00, 2.1176030000e+00, 7.0705700000e-01,
                3.4922500000e-01, 1.4482100000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{7.0000000000e-07,  5.5000000000e-06,  2.9200000000e-05,
                1.2280000000e-04,  4.4910000000e-04,  1.4557000000e-03,
                4.3319000000e-03,  1.1596500000e-02,  2.8158500000e-02,
                5.7033900000e-02,  8.9135600000e-02,  5.0842100000e-02,
                -1.9210300000e-01, -5.1210400000e-01, -1.8570070000e-01,
                6.6541190000e-01,  6.0239250000e-01,  5.2170700000e-02,
                -1.0645300000e-02, 2.4226000000e-03},
      doubles_t{1.1718110000e+07, 1.7546040000e+06, 3.9928130000e+05,
                1.1308460000e+05, 3.6885930000e+04, 1.3312210000e+04,
                5.1899880000e+03, 2.1516600000e+03, 9.3803250000e+02,
                4.2655730000e+02, 2.0106660000e+02, 9.7097610000e+01,
                4.2998720000e+01, 2.1177070000e+01, 1.0426750000e+01,
                4.5850080000e+00, 2.1176030000e+00, 7.0705700000e-01,
                3.4922500000e-01, 1.4482100000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{7.0705700000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.0000000000e-07, -1.8000000000e-06, -9.3000000000e-06,
                -3.9100000000e-05, -1.4300000000e-04, -4.6390000000e-04,
                -1.3801000000e-03, -3.7001000000e-03, -8.9921000000e-03,
                -1.8302100000e-02, -2.8755900000e-02, -1.6732400000e-02,
                6.5241000000e-02,  1.8344220000e-01,  6.9218300000e-02,
                -3.1560340000e-01, -5.0315010000e-01, 2.4900720000e-01,
                7.1715710000e-01,  2.9874560000e-01},
      doubles_t{1.1718110000e+07, 1.7546040000e+06, 3.9928130000e+05,
                1.1308460000e+05, 3.6885930000e+04, 1.3312210000e+04,
                5.1899880000e+03, 2.1516600000e+03, 9.3803250000e+02,
                4.2655730000e+02, 2.0106660000e+02, 9.7097610000e+01,
                4.2998720000e+01, 2.1177070000e+01, 1.0426750000e+01,
                4.5850080000e+00, 2.1176030000e+00, 7.0705700000e-01,
                3.4922500000e-01, 1.4482100000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4482100000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{4.2310000000e-04, 3.6743000000e-03, 1.9931200000e-02,
                           7.7422200000e-02, 2.1403860000e-01, 3.8485560000e-01,
                           3.6263400000e-01, 1.1708180000e-01, 5.1210000000e-03,
                           1.7539000000e-03, -4.5730000000e-04,
                           2.1990000000e-04, -6.6800000000e-05},
                 doubles_t{9.3663090000e+03, 2.2195540000e+03, 7.1945290000e+02,
                           2.7346450000e+02, 1.1475230000e+02, 5.1155570000e+01,
                           2.3682680000e+01, 1.0875480000e+01, 4.9551310000e+00,
                           2.2172670000e+00, 8.0641000000e-01, 3.2215400000e-01,
                           1.1761900000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.7200000000e-04, -1.5025000000e-03, -8.2269000000e-03,
                -3.2856600000e-02, -9.5013500000e-02, -1.8331060000e-01,
                -1.6121610000e-01, 1.7876440000e-01, 5.4378850000e-01,
                3.9133870000e-01, 4.6257000000e-02, -4.7800000000e-03,
                1.3923000000e-03},
      doubles_t{9.3663090000e+03, 2.2195540000e+03, 7.1945290000e+02,
                2.7346450000e+02, 1.1475230000e+02, 5.1155570000e+01,
                2.3682680000e+01, 1.0875480000e+01, 4.9551310000e+00,
                2.2172670000e+00, 8.0641000000e-01, 3.2215400000e-01,
                1.1761900000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.0641000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.6600000000e-05, 4.1000000000e-04, 2.2328000000e-03,
                9.0144000000e-03, 2.6011500000e-02, 5.1334000000e-02,
                4.3092900000e-02, -6.1504000000e-02, -2.0034240000e-01,
                -1.4573640000e-01, 3.1121610000e-01, 5.7645810000e-01,
                2.9393910000e-01},
      doubles_t{9.3663090000e+03, 2.2195540000e+03, 7.1945290000e+02,
                2.7346450000e+02, 1.1475230000e+02, 5.1155570000e+01,
                2.3682680000e+01, 1.0875480000e+01, 4.9551310000e+00,
                2.2172670000e+00, 8.0641000000e-01, 3.2215400000e-01,
                1.1761900000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1761900000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.4044000000e-03, 1.2171500000e-02, 5.6391900000e-02,
                           1.6764300000e-01, 3.1773680000e-01, 3.8726470000e-01,
                           2.7280060000e-01, 7.1208400000e-02},
                 doubles_t{4.4616130000e+02, 1.3396480000e+02, 5.1345910000e+01,
                           2.1916910000e+01, 9.8937250000e+00, 4.4925270000e+00,
                           2.0022930000e+00, 8.0840900000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{8.0840900000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.0060000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{6.6220000000e-01}));
    return abs_t(name, 36, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_36

} // namespace chemcache
