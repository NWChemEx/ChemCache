/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_oparen_seg_dash_opt_cparen__13() {
    // Basis Set name and origin point
    std::string name("cc-pvtz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{3.9817630000e-02, 1.1504636000e-01, 2.6094925000e-01,
                           3.9670451000e-01, 2.8518359000e-01, 4.3567820000e-02,
                           -8.4638500000e-03},
                 doubles_t{6.4910000000e+02, 2.3500000000e+02, 9.1620000000e+01,
                           3.7670000000e+01, 1.5910000000e+01, 5.8500000000e+00,
                           2.5420000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.5117000000e-04, -1.9612000000e-03, -1.1975970000e-02,
                -5.3374370000e-02, -9.4765400000e-02, 1.4013667000e-01,
                5.6626659000e-01, 4.3957416000e-01},
      doubles_t{6.4910000000e+02, 2.3500000000e+02, 9.1620000000e+01,
                3.7670000000e+01, 1.5910000000e+01, 5.8500000000e+00,
                2.5420000000e+00, 1.0570000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9310000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.0363000000e-04, -4.9434000000e-04, -2.4613100000e-03,
                -2.8822000000e-03, 2.2168700000e-03, -1.7725370000e-02,
                -1.9456360000e-01, 8.3916779000e-01},
      doubles_t{2.3500000000e+02, 9.1620000000e+01, 3.7670000000e+01,
                1.5910000000e+01, 5.8500000000e+00, 2.5420000000e+00,
                1.0570000000e+00, 1.4550000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{5.6500000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{1.7339100000e-03, 1.3922630000e-02, 6.5225210000e-02,
                2.0017866000e-01, 3.8394850000e-01, 4.3558565000e-01},
      doubles_t{4.4440000000e+02, 1.0510000000e+02, 3.3470000000e+01,
                1.2330000000e+01, 4.8690000000e+00, 1.9610000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{7.8340000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.7480000000e-04, -1.3319000000e-04, -4.7596800000e-03,
                -9.8982000000e-04, -3.5689680000e-02, 7.1046193000e-01},
      doubles_t{1.0510000000e+02, 3.3470000000e+01, 1.2330000000e+01,
                4.8690000000e+00, 1.9610000000e+00, 1.8880000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.5570000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3300000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0900000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.4400000000e-01}));
    return abs_t(name, 13, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_oparen_seg_dash_opt_cparen__13

} // namespace chemcache
