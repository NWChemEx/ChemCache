/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_oparen_seg_dash_opt_cparen__14() {
    // Basis Set name and origin point
    std::string name("cc-pvtz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{3.6877410000e-02, 1.0748259000e-01, 2.4798550000e-01,
                           3.9118703000e-01, 3.0257711000e-01, 5.5377850000e-02,
                           -7.1251200000e-03},
                 doubles_t{8.0480000000e+02, 2.9130000000e+02, 1.1360000000e+02,
                           4.6750000000e+01, 1.9820000000e+01, 7.7080000000e+00,
                           3.3400000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.6040000000e-04, -1.7621400000e-03, -1.1373780000e-02,
                -5.0151520000e-02, -1.0096384000e-01, 9.6392970000e-02,
                5.5498165000e-01, 4.8600827000e-01},
      doubles_t{8.0480000000e+02, 2.9130000000e+02, 1.1360000000e+02,
                4.6750000000e+01, 1.9820000000e+01, 7.7080000000e+00,
                3.3400000000e+00, 1.4020000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.3870000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-7.5080000000e-05, -3.6120000000e-04, -1.7681200000e-03,
                -1.9557500000e-03, 6.9489000000e-04, -2.6859670000e-02,
                -2.1621457000e-01, 8.6305744000e-01},
      doubles_t{2.9130000000e+02, 1.1360000000e+02, 4.6750000000e+01,
                1.9820000000e+01, 7.7080000000e+00, 3.3400000000e+00,
                1.4020000000e+00, 2.0700000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{7.9440000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.0007300000e-03, 1.5998010000e-02, 7.4385580000e-02,
                2.2198821000e-01, 4.0669611000e-01, 4.1039719000e-01},
      doubles_t{4.8150000000e+02, 1.1390000000e+02, 3.6230000000e+01,
                1.3340000000e+01, 5.2520000000e+00, 2.1200000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.5610000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.6001000000e-04, -2.9669000000e-04, -5.3355900000e-03,
                -4.2163800000e-03, -3.9083990000e-02, 7.4339997000e-01},
      doubles_t{1.1390000000e+02, 3.6230000000e+01, 1.3340000000e+01,
                5.2520000000e+00, 2.1200000000e+00, 2.5280000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{7.8890000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.8100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5900000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3600000000e-01}));
    return abs_t(name, 14, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_oparen_seg_dash_opt_cparen__14

} // namespace chemcache
