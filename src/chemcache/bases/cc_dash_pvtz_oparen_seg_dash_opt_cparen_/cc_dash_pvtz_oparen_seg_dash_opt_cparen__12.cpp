/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_oparen_seg_dash_opt_cparen__12() {
    // Basis Set name and origin point
    std::string name("cc-pvtz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{4.2731940000e-02, 1.2302264000e-01, 2.7489904000e-01,
                           4.0215007000e-01, 2.6520544000e-01, 3.2056310000e-02,
                           -7.8823600000e-03},
                 doubles_t{5.2100000000e+02, 1.8800000000e+02, 7.3010000000e+01,
                           2.9900000000e+01, 1.2540000000e+01, 4.3060000000e+00,
                           1.8260000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.2231000000e-04, -2.1655300000e-03, -1.2396750000e-02,
                -5.6920400000e-02, -8.5713650000e-02, 2.0049608000e-01,
                5.8174847000e-01, 3.7181130000e-01},
      doubles_t{5.2100000000e+02, 1.8800000000e+02, 7.3010000000e+01,
                2.9900000000e+01, 1.2540000000e+01, 4.3060000000e+00,
                1.8260000000e+00, 7.4170000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4570000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.2841000000e-04, -6.1244000000e-04, -3.0591900000e-03,
                -3.4443100000e-03, 5.2725500000e-03, -1.0103350000e-02,
                -1.7126047000e-01, 7.4321212000e-01},
      doubles_t{1.8800000000e+02, 7.3010000000e+01, 2.9900000000e+01,
                1.2540000000e+01, 4.3060000000e+00, 1.8260000000e+00,
                7.4170000000e-01, 7.6120000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3100000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{2.0762500000e-03, 1.6294230000e-02, 7.3898550000e-02,
                           2.1436913000e-01, 3.8224438000e-01, 3.9817876000e-01,
                           1.5261673000e-01},
                 doubles_t{3.1690000000e+02, 7.4860000000e+01, 2.3720000000e+01,
                           8.6690000000e+00, 3.3630000000e+00, 1.3100000000e+00,
                           4.9110000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.8000000000e-07, -4.0306000000e-04, -2.2386400000e-03,
                -7.5299700000e-03, -1.6484980000e-02, -3.0518780000e-02,
                4.0482820000e-01},
      doubles_t{7.4860000000e+01, 2.3720000000e+01, 8.6690000000e+00,
                3.3630000000e+00, 1.3100000000e+00, 4.9110000000e-01,
                2.3640000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.7330000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.2370000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9400000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2600000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.5200000000e-01}));
    return abs_t(name, 12, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_oparen_seg_dash_opt_cparen__12

} // namespace chemcache
