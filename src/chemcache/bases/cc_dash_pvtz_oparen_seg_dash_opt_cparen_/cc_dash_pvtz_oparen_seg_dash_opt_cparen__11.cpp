/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_oparen_seg_dash_opt_cparen__11() {
    // Basis Set name and origin point
    std::string name("cc-pvtz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{3.5283610000e-02, 9.5992650000e-02, 2.1374731000e-01,
                           3.4872680000e-01, 3.2465964000e-01, 1.1265222000e-01,
                           6.7064700000e-03},
                 doubles_t{4.7860000000e+02, 1.8620000000e+02, 7.6920000000e+01,
                           3.3320000000e+01, 1.5000000000e+01, 6.8690000000e+00,
                           2.6830000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.2002000000e-04, -1.3614400000e-03, -8.9985100000e-03,
                -3.4142140000e-02, -9.1592240000e-02, -1.7978810000e-02,
                3.7594796000e-01, 6.2159455000e-01},
      doubles_t{4.7860000000e+02, 1.8620000000e+02, 7.6920000000e+01,
                3.3320000000e+01, 1.5000000000e+01, 6.8690000000e+00,
                2.6830000000e+00, 1.1090000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.5400000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-4.8984000000e-04, -2.9865300000e-03, -1.9982580000e-02,
                -7.5380990000e-02, -2.0300446000e-01, -3.8679260000e-02,
                8.2337412000e-01, 1.3435181200e+00, 8.1655145000e-01},
      doubles_t{4.7860000000e+02, 1.8620000000e+02, 7.6920000000e+01,
                3.3320000000e+01, 1.5000000000e+01, 6.8690000000e+00,
                2.6830000000e+00, 1.1090000000e+00, 6.0150000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3820000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{2.2441000000e-03, 1.7401320000e-02, 7.7419730000e-02,
                           2.1912976000e-01, 3.7856395000e-01, 3.9500854000e-01,
                           1.6047908000e-01},
                 doubles_t{2.4330000000e+02, 5.7390000000e+01, 1.8100000000e+01,
                           6.5750000000e+00, 2.5210000000e+00, 9.6070000000e-01,
                           3.5120000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-4.2190000000e-05, -1.8968000000e-04, -1.8573500000e-03,
                -2.1204900000e-03, -1.3597250000e-02, -7.6642500000e-03,
                4.2316543000e-01},
      doubles_t{5.7390000000e+01, 1.8100000000e+01, 6.5750000000e+00,
                2.5210000000e+00, 9.6070000000e-01, 3.5120000000e-01,
                9.8270000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.7340000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5000000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3670000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{6.3600000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3970000000e-01}));
    return abs_t(name, 11, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_oparen_seg_dash_opt_cparen__11

} // namespace chemcache
