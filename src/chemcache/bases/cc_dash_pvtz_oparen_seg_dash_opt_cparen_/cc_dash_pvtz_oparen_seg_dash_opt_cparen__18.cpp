/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_oparen_seg_dash_opt_cparen__18() {
    // Basis Set name and origin point
    std::string name("cc-pvtz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{8.2383530000e-02, 2.0123473000e-01, 3.5680757000e-01,
                3.4964569000e-01, 1.1827097000e-01, 5.1888400000e-03},
      doubles_t{6.1990000000e+02, 2.4160000000e+02, 9.9790000000e+01,
                4.3150000000e+01, 1.9140000000e+01, 7.4880000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.1410500000e-03, -8.7315200000e-03, -3.7556050000e-02,
                -1.0563244000e-01, -7.8390100000e-03, 5.0322656000e-01,
                5.9773139000e-01},
      doubles_t{6.1990000000e+02, 2.4160000000e+02, 9.9790000000e+01,
                4.3150000000e+01, 1.9140000000e+01, 7.4880000000e+00,
                3.2050000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1960000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-3.6520000000e-05, -1.8121000000e-04, -8.7780000000e-04,
                -7.7047000000e-04, 1.0152500000e-03, -3.6161400000e-02,
                -2.6318234000e-01, 9.0746711000e-01},
      doubles_t{6.1990000000e+02, 2.4160000000e+02, 9.9790000000e+01,
                4.3150000000e+01, 1.9140000000e+01, 7.4880000000e+00,
                3.2050000000e+00, 5.2040000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9540000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.4026900000e-03, 1.9284450000e-02, 8.9297470000e-02,
                2.5990586000e-01, 4.4464010000e-01, 3.5244184000e-01},
      doubles_t{7.6180000000e+02, 1.8020000000e+02, 5.7500000000e+01,
                2.1240000000e+01, 8.3880000000e+00, 3.4160000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2060000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{3.6530000000e-05, -9.8116000000e-04, -4.6255300000e-03,
                -2.3038650000e-02, 5.9934800000e-03, 7.3378321000e-01},
      doubles_t{1.8020000000e+02, 5.7500000000e+01, 2.1240000000e+01,
                8.3880000000e+00, 3.4160000000e+00, 4.5230000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5450000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2540000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.1000000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{8.9000000000e-01}));
    return abs_t(name, 18, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_oparen_seg_dash_opt_cparen__18

} // namespace chemcache
