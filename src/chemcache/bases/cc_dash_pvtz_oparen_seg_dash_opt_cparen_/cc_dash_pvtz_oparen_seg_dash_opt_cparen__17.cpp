/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvtz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvtz_oparen_seg_dash_opt_cparen__17() {
    // Basis Set name and origin point
    std::string name("cc-pvtz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{8.7832410000e-02, 2.1148481000e-01, 3.6543021000e-01,
                3.4107709000e-01, 1.0211190000e-01, 2.1414400000e-03},
      doubles_t{5.2040000000e+02, 2.0310000000e+02, 8.3960000000e+01,
                3.6200000000e+01, 1.5830000000e+01, 6.3340000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.2691200000e-03, -9.3705000000e-03, -4.0210040000e-02,
                -1.0654733000e-01, 9.4871000000e-03, 5.1584431000e-01,
                5.7913764000e-01},
      doubles_t{5.2040000000e+02, 2.0310000000e+02, 8.3960000000e+01,
                3.6200000000e+01, 1.5830000000e+01, 6.3340000000e+00,
                2.6940000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{9.7680000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-4.2450000000e-05, -2.0761000000e-04, -1.0034600000e-03,
                -9.2446000000e-04, 7.6373000000e-04, -3.4995940000e-02,
                -2.5495618000e-01, 9.0028457000e-01},
      doubles_t{5.2040000000e+02, 2.0310000000e+02, 8.3960000000e+01,
                3.6200000000e+01, 1.5830000000e+01, 6.3340000000e+00,
                2.6940000000e+00, 4.3130000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.6250000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.4389100000e-03, 1.9490110000e-02, 8.9771540000e-02,
                2.5965851000e-01, 4.4305597000e-01, 3.5535305000e-01},
      doubles_t{6.6330000000e+02, 1.5680000000e+02, 4.9980000000e+01,
                1.8420000000e+01, 7.2400000000e+00, 2.9220000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0220000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.2260000000e-05, -9.0089000000e-04, -4.4234000000e-03,
                -2.0326770000e-02, 3.1901000000e-04, 7.3762441000e-01},
      doubles_t{1.5680000000e+02, 4.9980000000e+01, 1.8420000000e+01,
                7.2400000000e+00, 2.9220000000e+00, 3.8180000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3010000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0460000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.4400000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{7.0600000000e-01}));
    return abs_t(name, 17, r0, shells.begin(), shells.end());
} // cc_dash_pvtz_oparen_seg_dash_opt_cparen__17

} // namespace chemcache
