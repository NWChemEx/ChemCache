/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pwcvtz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pwcvtz_7() {
    // Basis Set name and origin point
    std::string name("cc-pwcvtz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1807000000e+01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{5.2300000000e-04, 4.0450000000e-03, 2.0775000000e-02,
                           8.0727000000e-02, 2.3307400000e-01, 4.3350100000e-01,
                           3.4747200000e-01, 4.1262000000e-02,
                           -8.5080000000e-03, 2.3840000000e-03},
                 doubles_t{1.1420000000e+04, 1.7120000000e+03, 3.8930000000e+02,
                           1.1000000000e+02, 3.5570000000e+01, 1.2540000000e+01,
                           4.6440000000e+00, 1.2930000000e+00, 5.1180000000e-01,
                           1.7870000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2930000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.1500000000e-04, -8.9500000000e-04, -4.6240000000e-03,
                -1.8528000000e-02, -5.7339000000e-02, -1.3207600000e-01,
                -1.7251000000e-01, 1.5181400000e-01, 5.9994400000e-01,
                3.8746200000e-01},
      doubles_t{1.1420000000e+04, 1.7120000000e+03, 3.8930000000e+02,
                1.1000000000e+02, 3.5570000000e+01, 1.2540000000e+01,
                4.6440000000e+00, 1.2930000000e+00, 5.1180000000e-01,
                1.7870000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.7870000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.7330000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9818000000e+01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{7.7430000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.5500000000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{1.4670000000e-02, 9.1764000000e-02, 2.9868300000e-01,
                           4.9848700000e-01, 3.3702300000e-01},
                 doubles_t{2.6630000000e+01, 5.9480000000e+00, 1.7420000000e+00,
                           5.5500000000e-01, 1.7250000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.7250000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{7.3520000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.6540000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.6900000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0930000000e+00}));
    return abs_t(name, 7, r0, shells.begin(), shells.end());
} // cc_dash_pwcvtz_7

} // namespace chemcache
