/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_32() {
    // Basis Set name and origin point
    std::string name("cc-pvdz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.0450000000e-04, 1.5868000000e-03, 8.2480000000e-03,
                3.3664900000e-02, 1.1012490000e-01, 2.7356070000e-01,
                4.2106700000e-01, 2.7667910000e-01, 2.9218000000e-02,
                -6.5903000000e-03, 2.2430000000e-03, -1.0382000000e-03,
                2.6950000000e-04, -1.2280000000e-04},
      doubles_t{5.2180000000e+05, 7.8214000000e+04, 1.7803000000e+04,
                5.0419000000e+03, 1.6445000000e+03, 5.9343000000e+02,
                2.3136000000e+02, 9.4762000000e+01, 2.9274000000e+01,
                1.2450000000e+01, 3.6463000000e+00, 1.5025000000e+00,
                2.4503000000e-01, 9.1594000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-6.3800000000e-05, -4.9160000000e-04, -2.6002000000e-03,
                -1.0608000000e-02, -3.7160200000e-02, -1.0057900000e-01,
                -2.1439770000e-01, -1.7826170000e-01, 4.7774040000e-01,
                6.3559830000e-01, 7.2217400000e-02, -1.2726500000e-02,
                2.9608000000e-03, -1.3292000000e-03},
      doubles_t{5.2180000000e+05, 7.8214000000e+04, 1.7803000000e+04,
                5.0419000000e+03, 1.6445000000e+03, 5.9343000000e+02,
                2.3136000000e+02, 9.4762000000e+01, 2.9274000000e+01,
                1.2450000000e+01, 3.6463000000e+00, 1.5025000000e+00,
                2.4503000000e-01, 9.1594000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.4600000000e-05, 1.9000000000e-04, 9.9930000000e-04,
                4.1200000000e-03, 1.4355700000e-02, 4.0037500000e-02,
                8.6579400000e-02, 8.1586100000e-02, -2.9347700000e-01,
                -5.3679830000e-01, 5.6379850000e-01, 6.9471820000e-01,
                3.1573000000e-02, -9.8949000000e-03},
      doubles_t{5.2180000000e+05, 7.8214000000e+04, 1.7803000000e+04,
                5.0419000000e+03, 1.6445000000e+03, 5.9343000000e+02,
                2.3136000000e+02, 9.4762000000e+01, 2.9274000000e+01,
                1.2450000000e+01, 3.6463000000e+00, 1.5025000000e+00,
                2.4503000000e-01, 9.1594000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-6.3000000000e-06, -4.8600000000e-05, -2.5530000000e-04,
                -1.0560000000e-03, -3.6674000000e-03, -1.0305300000e-02,
                -2.2220000000e-02, -2.1527500000e-02, 8.0675200000e-02,
                1.5249580000e-01, -1.9805280000e-01, -4.0739540000e-01,
                6.4772880000e-01, 5.2220330000e-01},
      doubles_t{5.2180000000e+05, 7.8214000000e+04, 1.7803000000e+04,
                5.0419000000e+03, 1.6445000000e+03, 5.9343000000e+02,
                2.3136000000e+02, 9.4762000000e+01, 2.9274000000e+01,
                1.2450000000e+01, 3.6463000000e+00, 1.5025000000e+00,
                2.4503000000e-01, 9.1594000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{9.1594000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{1.4591000000e-03, 1.2217600000e-02, 6.1049000000e-02,
                           2.0080390000e-01, 4.0389420000e-01, 3.9700270000e-01,
                           1.1054810000e-01, 7.6800000000e-05, 2.1263000000e-03,
                           -3.7440000000e-04, 1.3210000000e-04},
                 doubles_t{3.5681000000e+03, 8.4572000000e+02, 2.7274000000e+02,
                           1.0268000000e+02, 4.2148000000e+01, 1.8149000000e+01,
                           7.5934000000e+00, 3.1964000000e+00, 1.2743000000e+00,
                           2.8258000000e-01, 8.4090000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-5.6300000000e-04, -4.7354000000e-03, -2.4264300000e-02,
                -8.3090000000e-02, -1.8002470000e-01, -1.6632950000e-01,
                2.1937170000e-01, 5.8202390000e-01, 3.4777200000e-01,
                1.9245500000e-02, -3.4825000000e-03},
      doubles_t{3.5681000000e+03, 8.4572000000e+02, 2.7274000000e+02,
                1.0268000000e+02, 4.2148000000e+01, 1.8149000000e+01,
                7.5934000000e+00, 3.1964000000e+00, 1.2743000000e+00,
                2.8258000000e-01, 8.4090000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{1.1150000000e-04, 9.2120000000e-04, 4.8273000000e-03,
                1.6227200000e-02, 3.6635400000e-02, 3.0786700000e-02,
                -4.8064300000e-02, -1.5598040000e-01, -6.3237000000e-02,
                5.0408190000e-01, 6.1822000000e-01},
      doubles_t{3.5681000000e+03, 8.4572000000e+02, 2.7274000000e+02,
                1.0268000000e+02, 4.2148000000e+01, 1.8149000000e+01,
                7.5934000000e+00, 3.1964000000e+00, 1.2743000000e+00,
                2.8258000000e-01, 8.4090000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.4090000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{2.5768400000e-02, 1.4544210000e-01, 3.7137210000e-01,
                           4.8000020000e-01, 2.8968000000e-01},
                 doubles_t{7.4762000000e+01, 2.1302000000e+01, 7.3436000000e+00,
                           2.5651000000e+00, 8.1970000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.4700000000e-01}));
    return abs_t(name, 32, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_32

} // namespace chemcache
