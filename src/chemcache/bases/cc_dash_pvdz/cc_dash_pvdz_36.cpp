/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_36() {
    // Basis Set name and origin point
    std::string name("cc-pvdz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.9690000000e-04, 1.5286000000e-03, 7.9500000000e-03,
                3.2493800000e-02, 1.0672400000e-01, 2.6757010000e-01,
                4.2018510000e-01, 2.8580150000e-01, 3.2246100000e-02,
                -7.6828000000e-03, 2.9393000000e-03, -1.4662000000e-03,
                4.1440000000e-04, -1.7200000000e-04},
      doubles_t{6.8135880000e+05, 1.0212650000e+05, 2.3243710000e+04,
                6.5820070000e+03, 2.1464290000e+03, 7.7433780000e+02,
                3.0167020000e+02, 1.2341180000e+02, 3.8567550000e+01,
                1.6637380000e+01, 5.1987950000e+00, 2.2948140000e+00,
                4.8521100000e-01, 1.8627000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-6.2200000000e-05, -4.7940000000e-04, -2.5341000000e-03,
                -1.0363600000e-02, -3.6351600000e-02, -9.9373700000e-02,
                -2.1406100000e-01, -1.8831920000e-01, 4.5838160000e-01,
                6.4656640000e-01, 8.5657900000e-02, -1.5612300000e-02,
                3.6490000000e-03, -1.5189000000e-03},
      doubles_t{6.8135880000e+05, 1.0212650000e+05, 2.3243710000e+04,
                6.5820070000e+03, 2.1464290000e+03, 7.7433780000e+02,
                3.0167020000e+02, 1.2341180000e+02, 3.8567550000e+01,
                1.6637380000e+01, 5.1987950000e+00, 2.2948140000e+00,
                4.8521100000e-01, 1.8627000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.4900000000e-05, 1.9280000000e-04, 1.0149000000e-03,
                4.1857000000e-03, 1.4645900000e-02, 4.1107000000e-02,
                9.0395500000e-02, 8.9062300000e-02, -2.9357180000e-01,
                -5.7596980000e-01, 4.9685780000e-01, 7.6168950000e-01,
                4.5326700000e-02, -1.0772200000e-02},
      doubles_t{6.8135880000e+05, 1.0212650000e+05, 2.3243710000e+04,
                6.5820070000e+03, 2.1464290000e+03, 7.7433780000e+02,
                3.0167020000e+02, 1.2341180000e+02, 3.8567550000e+01,
                1.6637380000e+01, 5.1987950000e+00, 2.2948140000e+00,
                4.8521100000e-01, 1.8627000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-7.9000000000e-06, -6.1400000000e-05, -3.2300000000e-04,
                -1.3330000000e-03, -4.6672000000e-03, -1.3135200000e-02,
                -2.9034200000e-02, -2.9017300000e-02, 1.0026640000e-01,
                2.1038180000e-01, -2.3324710000e-01, -5.5464970000e-01,
                6.9695220000e-01, 5.4081520000e-01},
      doubles_t{6.8135880000e+05, 1.0212650000e+05, 2.3243710000e+04,
                6.5820070000e+03, 2.1464290000e+03, 7.7433780000e+02,
                3.0167020000e+02, 1.2341180000e+02, 3.8567550000e+01,
                1.6637380000e+01, 5.1987950000e+00, 2.2948140000e+00,
                4.8521100000e-01, 1.8627000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8627000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{1.5195000000e-03, 1.2742400000e-02, 6.3646500000e-02,
                2.0856350000e-01, 4.1224230000e-01, 3.8781030000e-01,
                1.0038200000e-01, -2.5078000000e-03, 2.7139000000e-03,
                -6.9770000000e-04, 2.1070000000e-04},
      doubles_t{4.4742700000e+03, 1.0605790000e+03, 3.4220810000e+02,
                1.2899840000e+02, 5.3087220000e+01, 2.2959420000e+01,
                9.5073000000e+00, 4.0830550000e+00, 1.7504460000e+00,
                5.2919000000e-01, 1.6436900000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-6.2080000000e-04, -5.2212000000e-03, -2.6846300000e-02,
                -9.1582300000e-02, -1.9681640000e-01, -1.6347500000e-01,
                2.7382040000e-01, 5.9815920000e-01, 2.7504530000e-01,
                1.2770600000e-02, -1.0135000000e-03},
      doubles_t{4.4742700000e+03, 1.0605790000e+03, 3.4220810000e+02,
                1.2899840000e+02, 5.3087220000e+01, 2.2959420000e+01,
                9.5073000000e+00, 4.0830550000e+00, 1.7504460000e+00,
                5.2919000000e-01, 1.6436900000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{1.7010000000e-04, 1.4064000000e-03, 7.3963000000e-03,
                2.4825400000e-02, 5.5715500000e-02, 4.1213200000e-02,
                -8.7605700000e-02, -2.4405860000e-01, -2.9500700000e-02,
                6.0122950000e-01, 5.2548070000e-01},
      doubles_t{4.4742700000e+03, 1.0605790000e+03, 3.4220810000e+02,
                1.2899840000e+02, 5.3087220000e+01, 2.2959420000e+01,
                9.5073000000e+00, 4.0830550000e+00, 1.7504460000e+00,
                5.2919000000e-01, 1.6436900000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.6436900000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{2.1955700000e-02, 1.3216200000e-01, 3.6334840000e-01,
                           4.9295820000e-01, 2.6675600000e-01},
                 doubles_t{1.1552530000e+02, 3.3465250000e+01, 1.1830460000e+01,
                           4.3397710000e+00, 1.5075240000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0300000000e-01}));
    return abs_t(name, 36, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_36

} // namespace chemcache
