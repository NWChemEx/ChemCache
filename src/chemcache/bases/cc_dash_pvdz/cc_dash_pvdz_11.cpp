/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_11() {
    // Basis Set name and origin point
    std::string name("cc-pvdz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{4.5887800000e-04, 3.5507000000e-03, 1.8261800000e-02,
                7.1665000000e-02, 2.1234600000e-01, 4.1620300000e-01,
                3.7302000000e-01, 6.2505400000e-02, -6.2453200000e-03,
                2.4337400000e-03, -4.4238100000e-04, 2.4192400000e-04},
      doubles_t{3.1700000000e+04, 4.7550000000e+03, 1.0820000000e+03,
                3.0640000000e+02, 9.9530000000e+01, 3.5420000000e+01,
                1.3300000000e+01, 4.3920000000e+00, 1.6760000000e+00,
                5.8890000000e-01, 5.6400000000e-02, 2.3070000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.1216200000e-04, -8.6851200000e-04, -4.5133000000e-03,
                -1.8143600000e-02, -5.8079900000e-02, -1.3765300000e-01,
                -1.9390800000e-01, 8.5800900000e-02, 6.0441900000e-01,
                4.4171900000e-01, 1.3054700000e-02, -5.6808500000e-03},
      doubles_t{3.1700000000e+04, 4.7550000000e+03, 1.0820000000e+03,
                3.0640000000e+02, 9.9530000000e+01, 3.5420000000e+01,
                1.3300000000e+01, 4.3920000000e+00, 1.6760000000e+00,
                5.8890000000e-01, 5.6400000000e-02, 2.3070000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.7016000000e-05, 1.3069300000e-04, 6.8778400000e-04,
                2.7235900000e-03, 8.9552900000e-03, 2.0783200000e-02,
                3.1938000000e-02, -1.9136800000e-02, -1.0259500000e-01,
                -1.9894500000e-01, 6.5595200000e-01, 4.3115300000e-01},
      doubles_t{3.1700000000e+04, 4.7550000000e+03, 1.0820000000e+03,
                3.0640000000e+02, 9.9530000000e+01, 3.5420000000e+01,
                1.3300000000e+01, 4.3920000000e+00, 1.6760000000e+00,
                5.8890000000e-01, 5.6400000000e-02, 2.3070000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3070000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{5.7964100000e-03, 4.1575600000e-02, 1.6287300000e-01,
                           3.5940100000e-01, 4.4998800000e-01, 2.2750700000e-01,
                           8.0824700000e-03, -1.9629300000e-03},
                 doubles_t{1.3810000000e+02, 3.2240000000e+01, 9.9850000000e+00,
                           3.4840000000e+00, 1.2310000000e+00, 4.1770000000e-01,
                           6.5130000000e-02, 2.0530000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-5.8153100000e-04, -4.0730600000e-03, -1.6793700000e-02,
                -3.5326800000e-02, -5.2197100000e-02, -1.6835900000e-02,
                4.3461300000e-01, 6.5821800000e-01},
      doubles_t{1.3810000000e+02, 3.2240000000e+01, 9.9850000000e+00,
                3.4840000000e+00, 1.2310000000e+00, 4.1770000000e-01,
                6.5130000000e-02, 2.0530000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.0530000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{9.2800000000e-02}));
    return abs_t(name, 11, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_11

} // namespace chemcache
