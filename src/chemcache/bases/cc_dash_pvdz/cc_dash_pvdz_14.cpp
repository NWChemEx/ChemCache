/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_14() {
    // Basis Set name and origin point
    std::string name("cc-pvdz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.7044300000e-04, 2.0971700000e-03, 1.0850600000e-02,
                4.3675400000e-02, 1.3765300000e-01, 3.1664400000e-01,
                4.1858100000e-01, 2.1021200000e-01, 1.4495200000e-02,
                -2.0359000000e-03, 6.2418600000e-04, -2.8287200000e-04},
      doubles_t{7.8860000000e+04, 1.1820000000e+04, 2.6920000000e+03,
                7.6340000000e+02, 2.4960000000e+02, 9.0280000000e+01,
                3.5290000000e+01, 1.4510000000e+01, 4.0530000000e+00,
                1.4820000000e+00, 2.5170000000e-01, 9.2430000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-7.2317700000e-05, -5.5511600000e-04, -2.9380500000e-03,
                -1.1768700000e-02, -4.0290700000e-02, -1.0060900000e-01,
                -1.9652800000e-01, -1.0238200000e-01, 5.2719000000e-01,
                5.9325100000e-01, 3.3265200000e-02, -9.7366200000e-03},
      doubles_t{7.8860000000e+04, 1.1820000000e+04, 2.6920000000e+03,
                7.6340000000e+02, 2.4960000000e+02, 9.0280000000e+01,
                3.5290000000e+01, 1.4510000000e+01, 4.0530000000e+00,
                1.4820000000e+00, 2.5170000000e-01, 9.2430000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.8511300000e-05, 1.4223600000e-04, 7.5218500000e-04,
                3.0227900000e-03, 1.0367700000e-02, 2.6256300000e-02,
                5.2398900000e-02, 2.9095900000e-02, -1.7800300000e-01,
                -3.4687400000e-01, 6.2302000000e-01, 5.3771200000e-01},
      doubles_t{7.8860000000e+04, 1.1820000000e+04, 2.6920000000e+03,
                7.6340000000e+02, 2.4960000000e+02, 9.0280000000e+01,
                3.5290000000e+01, 1.4510000000e+01, 4.0530000000e+00,
                1.4820000000e+00, 2.5170000000e-01, 9.2430000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{9.2430000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{3.9265600000e-03, 2.9881100000e-02, 1.2721200000e-01,
                           3.2094300000e-01, 4.5542900000e-01, 2.6856300000e-01,
                           1.8833600000e-02, -2.6243100000e-03},
                 doubles_t{3.1590000000e+02, 7.4420000000e+01, 2.3480000000e+01,
                           8.4880000000e+00, 3.2170000000e+00, 1.2290000000e+00,
                           2.9640000000e-01, 8.7680000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-8.5830200000e-04, -6.3032800000e-03, -2.8825500000e-02,
                -6.9456000000e-02, -1.1949300000e-01, -1.9958100000e-02,
                5.1026800000e-01, 6.0038200000e-01},
      doubles_t{3.1590000000e+02, 7.4420000000e+01, 2.3480000000e+01,
                8.4880000000e+00, 3.2170000000e+00, 1.2290000000e+00,
                2.9640000000e-01, 8.7680000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.7680000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7500000000e-01}));
    return abs_t(name, 14, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_14

} // namespace chemcache
