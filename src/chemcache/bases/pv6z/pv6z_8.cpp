/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "pv6z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t pv6z_8() {
    // Basis Set name and origin point
    std::string name("pv6z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{6.0000000000e-06, 4.3000000000e-05, 2.2700000000e-04,
                           9.5700000000e-04, 3.4720000000e-03, 1.1196000000e-02,
                           3.2375000000e-02, 8.2835000000e-02, 1.7966800000e-01,
                           3.0520100000e-01, 3.4088900000e-01, 1.7742200000e-01,
                           2.0470000000e-02, -9.5900000000e-04,
                           1.0530000000e-03, -9.6000000000e-05},
                 doubles_t{5.7097980000e+05, 8.5496900000e+04, 1.9456650000e+04,
                           5.5110300000e+03, 1.7979190000e+03, 6.4906770000e+02,
                           2.5313860000e+02, 1.0493790000e+02, 4.5650360000e+01,
                           2.0617620000e+01, 9.5867590000e+00, 4.4925100000e+00,
                           1.8369430000e+00, 8.3480300000e-01, 3.6572200000e-01,
                           1.5703400000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.4925100000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8369430000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{8.3480300000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.0000000000e-06, -1.0000000000e-05, -5.1000000000e-05,
                -2.1700000000e-04, -7.9100000000e-04, -2.5590000000e-03,
                -7.5300000000e-03, -1.9782000000e-02, -4.6086000000e-02,
                -8.9189000000e-02, -1.3755000000e-01, -1.0510800000e-01,
                1.4478400000e-01, 4.4160000000e-01, 4.4454500000e-01,
                1.2823200000e-01},
      doubles_t{5.7097980000e+05, 8.5496900000e+04, 1.9456650000e+04,
                5.5110300000e+03, 1.7979190000e+03, 6.4906770000e+02,
                2.5313860000e+02, 1.0493790000e+02, 4.5650360000e+01,
                2.0617620000e+01, 9.5867590000e+00, 4.4925100000e+00,
                1.8369430000e+00, 8.3480300000e-01, 3.6572200000e-01,
                1.5703400000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.6572200000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5703400000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7326240000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2272000000e+00}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{1.6700000000e-04, 1.4330000000e-03, 7.5480000000e-03,
                           2.8601000000e-02, 8.4361000000e-02, 1.8742700000e-01,
                           2.9795300000e-01, 3.3862300000e-01, 2.4723300000e-01,
                           7.0024000000e-02},
                 doubles_t{5.2576380000e+02, 1.2463060000e+02, 4.0343000000e+01,
                           1.5178310000e+01, 6.2450390000e+00, 2.7326240000e+00,
                           1.2272000000e+00, 5.4919000000e-01, 2.4177600000e-01,
                           1.0250500000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.4919000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.4177600000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0250500000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{7.7002000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3625000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4684000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{6.4120000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.8000000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{6.2537000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7084000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1729000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0800000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0017000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{2.1158000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{8.9500000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{4.0207000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5530000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 6, doubles_t{1.0000000000e+00},
                                   doubles_t{2.6000000000e+00}));
    return abs_t(name, 8, r0, shells.begin(), shells.end());
} // pv6z_8

} // namespace chemcache
