/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pvqz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pvqz_36() {
    // Basis Set name and origin point
    std::string name("aug-cc-pvqz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{3.2000000000e-06,  2.5200000000e-05,  1.3280000000e-04,
                5.6070000000e-04,  2.0401000000e-03,  6.6235000000e-03,
                1.9499600000e-02,  5.1936400000e-02,  1.2211660000e-01,
                2.3836530000e-01,  3.4070510000e-01,  2.7928550000e-01,
                8.4099200000e-02,  2.5042000000e-03,  1.3574000000e-03,
                -6.5910000000e-04, 2.7010000000e-04,  -1.4360000000e-04,
                6.1100000000e-05,  -3.3000000000e-05, 8.8000000000e-06},
      doubles_t{1.8226110000e+07, 2.7288020000e+06, 6.2099770000e+05,
                1.7589960000e+05, 5.7387500000e+04, 2.0717180000e+04,
                8.0788900000e+03, 3.3495170000e+03, 1.4597810000e+03,
                6.6289390000e+02, 3.1139220000e+02, 1.4993750000e+02,
                7.2498250000e+01, 3.5569350000e+01, 1.7766630000e+01,
                8.7123830000e+00, 4.1449710000e+00, 1.9696490000e+00,
                6.7995200000e-01, 3.2450200000e-01, 1.3744100000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.0000000000e-06, -7.9000000000e-06, -4.1800000000e-05,
                -1.7660000000e-04, -6.4340000000e-04, -2.0999000000e-03,
                -6.2453000000e-03, -1.7080400000e-02, -4.2381500000e-02,
                -9.2867900000e-02, -1.6573900000e-01, -1.9550880000e-01,
                -1.6409000000e-03, 4.5300710000e-01,  5.3707510000e-01,
                1.5289710000e-01,  5.7411000000e-03,  1.7414000000e-03,
                -4.3360000000e-04, 1.7750000000e-04,  -6.0900000000e-05},
      doubles_t{1.8226110000e+07, 2.7288020000e+06, 6.2099770000e+05,
                1.7589960000e+05, 5.7387500000e+04, 2.0717180000e+04,
                8.0788900000e+03, 3.3495170000e+03, 1.4597810000e+03,
                6.6289390000e+02, 3.1139220000e+02, 1.4993750000e+02,
                7.2498250000e+01, 3.5569350000e+01, 1.7766630000e+01,
                8.7123830000e+00, 4.1449710000e+00, 1.9696490000e+00,
                6.7995200000e-01, 3.2450200000e-01, 1.3744100000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{4.0000000000e-07,  3.2000000000e-06,  1.6800000000e-05,
                7.0900000000e-05,  2.5820000000e-04,  8.4330000000e-04,
                2.5115000000e-03,  6.8921000000e-03,  1.7222000000e-02,
                3.8315900000e-02,  7.0543800000e-02,  8.8071700000e-02,
                6.3280000000e-04,  -2.8810650000e-01, -5.0497970000e-01,
                -2.6777300000e-02, 7.0987180000e-01,  5.1580200000e-01,
                3.8754500000e-02,  -6.7160000000e-03, 1.7479000000e-03},
      doubles_t{1.8226110000e+07, 2.7288020000e+06, 6.2099770000e+05,
                1.7589960000e+05, 5.7387500000e+04, 2.0717180000e+04,
                8.0788900000e+03, 3.3495170000e+03, 1.4597810000e+03,
                6.6289390000e+02, 3.1139220000e+02, 1.4993750000e+02,
                7.2498250000e+01, 3.5569350000e+01, 1.7766630000e+01,
                8.7123830000e+00, 4.1449710000e+00, 1.9696490000e+00,
                6.7995200000e-01, 3.2450200000e-01, 1.3744100000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{6.7995200000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.2450200000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.0000000000e-07, -1.0000000000e-06, -5.3000000000e-06,
                -2.2600000000e-05, -8.2300000000e-05, -2.6840000000e-04,
                -8.0140000000e-04, -2.1937000000e-03, -5.5074000000e-03,
                -1.2226600000e-02, -2.2761700000e-02, -2.8360600000e-02,
                -7.5650000000e-04, 1.0013650000e-01,  1.8153320000e-01,
                1.1186700000e-02,  -3.5758430000e-01, -4.5723050000e-01,
                3.2868050000e-01,  6.9515970000e-01,  2.5684730000e-01},
      doubles_t{1.8226110000e+07, 2.7288020000e+06, 6.2099770000e+05,
                1.7589960000e+05, 5.7387500000e+04, 2.0717180000e+04,
                8.0788900000e+03, 3.3495170000e+03, 1.4597810000e+03,
                6.6289390000e+02, 3.1139220000e+02, 1.4993750000e+02,
                7.2498250000e+01, 3.5569350000e+01, 1.7766630000e+01,
                8.7123830000e+00, 4.1449710000e+00, 1.9696490000e+00,
                6.7995200000e-01, 3.2450200000e-01, 1.3744100000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3744100000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0388000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{6.0500000000e-05, 5.3780000000e-04, 3.0934000000e-03,
                           1.3515000000e-02, 4.7095900000e-02, 1.2962000000e-01,
                           2.6611080000e-01, 3.6780580000e-01, 2.7403720000e-01,
                           7.8711300000e-02, 4.9842000000e-03, 1.2267000000e-03,
                           -2.4480000000e-04, 1.4320000000e-04,
                           -6.2200000000e-05, 1.7000000000e-05},
                 doubles_t{2.8600830000e+04, 6.7709910000e+03, 2.1990490000e+03,
                           8.4117960000e+02, 3.5676630000e+02, 1.6263620000e+02,
                           7.7966040000e+01, 3.8661490000e+01, 1.9576790000e+01,
                           9.7917610000e+00, 4.8353830000e+00, 2.3681250000e+00,
                           1.0899960000e+00, 5.0458800000e-01, 2.1845500000e-01,
                           8.9959000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-2.4600000000e-05, -2.1920000000e-04, -1.2628000000e-03,
                -5.5756000000e-03, -1.9754600000e-02, -5.6448800000e-02,
                -1.2149230000e-01, -1.7949070000e-01, -9.6231400000e-02,
                2.1631900000e-01, 4.8997210000e-01, 3.7267580000e-01,
                7.5008800000e-02, -2.2460000000e-04, 1.3232000000e-03,
                -2.7130000000e-04},
      doubles_t{2.8600830000e+04, 6.7709910000e+03, 2.1990490000e+03,
                8.4117960000e+02, 3.5676630000e+02, 1.6263620000e+02,
                7.7966040000e+01, 3.8661490000e+01, 1.9576790000e+01,
                9.7917610000e+00, 4.8353830000e+00, 2.3681250000e+00,
                1.0899960000e+00, 5.0458800000e-01, 2.1845500000e-01,
                8.9959000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0458800000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{6.7000000000e-06, 5.9600000000e-05, 3.4320000000e-04,
                1.5190000000e-03, 5.3881000000e-03, 1.5493500000e-02,
                3.3517600000e-02, 5.0191100000e-02, 2.4455000000e-02,
                -7.5295300000e-02, -1.7605340000e-01, -1.5707240000e-01,
                1.3045790000e-01, 4.5022090000e-01, 4.5132910000e-01,
                1.5425190000e-01},
      doubles_t{2.8600830000e+04, 6.7709910000e+03, 2.1990490000e+03,
                8.4117960000e+02, 3.5676630000e+02, 1.6263620000e+02,
                7.7966040000e+01, 3.8661490000e+01, 1.9576790000e+01,
                9.7917610000e+00, 4.8353830000e+00, 2.3681250000e+00,
                1.0899960000e+00, 5.0458800000e-01, 2.1845500000e-01,
                8.9959000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.1845500000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.9959000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.4457000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.1080000000e-04, 1.0828000000e-03, 6.4065000000e-03,
                           2.6237900000e-02, 7.8823500000e-02, 1.7706770000e-01,
                           2.8396220000e-01, 3.2947020000e-01, 2.5890010000e-01,
                           1.0962050000e-01, 1.5890500000e-02},
                 doubles_t{1.4377790000e+03, 4.3426850000e+02, 1.6892700000e+02,
                           7.4777540000e+01, 3.5516020000e+01, 1.7671050000e+01,
                           9.0046110000e+00, 4.5947730000e+00, 2.3264860000e+00,
                           1.1332470000e+00, 4.8130700000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1332470000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.8130700000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.0530000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0390000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{9.5570000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{4.1300000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.2560000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{7.3950000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{3.5900000000e-01}));
    return abs_t(name, 36, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pvqz_36

} // namespace chemcache
