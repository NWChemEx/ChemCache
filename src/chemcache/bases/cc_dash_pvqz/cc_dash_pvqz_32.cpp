/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvqz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvqz_32() {
    // Basis Set name and origin point
    std::string name("cc-pvqz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{3.9000000000e-06,  3.0500000000e-05,  1.6050000000e-04,
                6.7760000000e-04,  2.4637000000e-03,  7.9835000000e-03,
                2.3377400000e-02,  6.1574200000e-02,  1.4150760000e-01,
                2.6469420000e-01,  3.4832570000e-01,  2.4541960000e-01,
                5.3564600000e-02,  -1.8380000000e-03, 1.8049000000e-03,
                -8.4760000000e-04, 3.6680000000e-04,  -1.5420000000e-04,
                5.8400000000e-05,  -3.8700000000e-05, 1.1100000000e-05},
      doubles_t{1.2360510000e+07, 1.8506980000e+06, 4.2113140000e+05,
                1.1927830000e+05, 3.8912280000e+04, 1.4048680000e+04,
                5.4806990000e+03, 2.2742060000e+03, 9.9224130000e+02,
                4.5099970000e+02, 2.1182020000e+02, 1.0141100000e+02,
                4.6914090000e+01, 2.3508950000e+01, 1.1681310000e+01,
                5.4345260000e+00, 2.6088080000e+00, 1.1984420000e+00,
                3.2980800000e-01, 1.5543300000e-01, 6.6913000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.2000000000e-06, -9.5000000000e-06, -4.9900000000e-05,
                -2.1090000000e-04, -7.6860000000e-04, -2.5025000000e-03,
                -7.4259000000e-03, -2.0124900000e-02, -4.9298600000e-02,
                -1.0486830000e-01, -1.7832750000e-01, -1.7895810000e-01,
                8.7384200000e-02,  5.2709200000e-01,  4.6795510000e-01,
                8.9220600000e-02,  -3.4230000000e-04, 1.9144000000e-03,
                -4.0960000000e-04, 2.6220000000e-04,  -7.7400000000e-05},
      doubles_t{1.2360510000e+07, 1.8506980000e+06, 4.2113140000e+05,
                1.1927830000e+05, 3.8912280000e+04, 1.4048680000e+04,
                5.4806990000e+03, 2.2742060000e+03, 9.9224130000e+02,
                4.5099970000e+02, 2.1182020000e+02, 1.0141100000e+02,
                4.6914090000e+01, 2.3508950000e+01, 1.1681310000e+01,
                5.4345260000e+00, 2.6088080000e+00, 1.1984420000e+00,
                3.2980800000e-01, 1.5543300000e-01, 6.6913000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{5.0000000000e-07,  3.7000000000e-06,  1.9200000000e-05,
                8.1300000000e-05,  2.9650000000e-04,  9.6480000000e-04,
                2.8715000000e-03,  7.7973000000e-03,  1.9292200000e-02,
                4.1620000000e-02,  7.3536800000e-02,  7.7832000000e-02,
                -4.2358200000e-02, -3.4475370000e-01, -4.4567130000e-01,
                1.5115440000e-01,  7.1742950000e-01,  4.0356340000e-01,
                1.9751100000e-02,  -6.3290000000e-03, 1.5233000000e-03},
      doubles_t{1.2360510000e+07, 1.8506980000e+06, 4.2113140000e+05,
                1.1927830000e+05, 3.8912280000e+04, 1.4048680000e+04,
                5.4806990000e+03, 2.2742060000e+03, 9.9224130000e+02,
                4.5099970000e+02, 2.1182020000e+02, 1.0141100000e+02,
                4.6914090000e+01, 2.3508950000e+01, 1.1681310000e+01,
                5.4345260000e+00, 2.6088080000e+00, 1.1984420000e+00,
                3.2980800000e-01, 1.5543300000e-01, 6.6913000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.2980800000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5543300000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.0000000000e-07, -9.0000000000e-07, -4.9000000000e-06,
                -2.0800000000e-05, -7.6100000000e-05, -2.4720000000e-04,
                -7.3730000000e-04, -1.9981000000e-03, -4.9640000000e-03,
                -1.0693000000e-02, -1.9084300000e-02, -2.0164300000e-02,
                1.0836200000e-02,  9.6211000000e-02,  1.2799790000e-01,
                -5.0606500000e-02, -2.8529170000e-01, -3.0653590000e-01,
                3.4904080000e-01,  6.1614640000e-01,  2.4126480000e-01},
      doubles_t{1.2360510000e+07, 1.8506980000e+06, 4.2113140000e+05,
                1.1927830000e+05, 3.8912280000e+04, 1.4048680000e+04,
                5.4806990000e+03, 2.2742060000e+03, 9.9224130000e+02,
                4.5099970000e+02, 2.1182020000e+02, 1.0141100000e+02,
                4.6914090000e+01, 2.3508950000e+01, 1.1681310000e+01,
                5.4345260000e+00, 2.6088080000e+00, 1.1984420000e+00,
                3.2980800000e-01, 1.5543300000e-01, 6.6913000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{6.6913000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{5.3100000000e-05, 4.7200000000e-04, 2.7187000000e-03,
                           1.1914500000e-02, 4.1762500000e-02, 1.1658940000e-01,
                           2.4583380000e-01, 3.5912610000e-01, 2.9779290000e-01,
                           1.0177080000e-01, 9.4072000000e-03, 1.4350000000e-03,
                           3.5400000000e-05, 7.6800000000e-05,
                           -3.5200000000e-05, 9.5000000000e-06},
                 doubles_t{2.4017470000e+04, 5.6857170000e+03, 1.8464860000e+03,
                           7.0624980000e+02, 2.9945610000e+02, 1.3643900000e+02,
                           6.5390150000e+01, 3.2393730000e+01, 1.6415620000e+01,
                           8.2877870000e+00, 4.1126340000e+00, 1.9988540000e+00,
                           9.4429100000e-01, 3.4121100000e-01, 1.3435000000e-01,
                           5.1735000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-2.0400000000e-05, -1.8180000000e-04, -1.0491000000e-03,
                -4.6392000000e-03, -1.6509000000e-02, -4.7660900000e-02,
                -1.0496780000e-01, -1.6337450000e-01, -1.1809980000e-01,
                1.4201780000e-01, 4.2743240000e-01, 4.2561670000e-01,
                1.5820340000e-01, 9.9108000000e-03, -5.3900000000e-04,
                2.7600000000e-04},
      doubles_t{2.4017470000e+04, 5.6857170000e+03, 1.8464860000e+03,
                7.0624980000e+02, 2.9945610000e+02, 1.3643900000e+02,
                6.5390150000e+01, 3.2393730000e+01, 1.6415620000e+01,
                8.2877870000e+00, 4.1126340000e+00, 1.9988540000e+00,
                9.4429100000e-01, 3.4121100000e-01, 1.3435000000e-01,
                5.1735000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.4121100000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3435000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.0000000000e-06, 3.5700000000e-05, 2.0800000000e-04,
                9.1210000000e-04, 3.2823000000e-03, 9.4139000000e-03,
                2.1091700000e-02, 3.2500000000e-02, 2.3997200000e-02,
                -3.7118600000e-02, -9.8813000000e-02, -1.2356590000e-01,
                -1.1013300000e-02, 3.2686380000e-01, 5.4619590000e-01,
                2.6673480000e-01},
      doubles_t{2.4017470000e+04, 5.6857170000e+03, 1.8464860000e+03,
                7.0624980000e+02, 2.9945610000e+02, 1.3643900000e+02,
                6.5390150000e+01, 3.2393730000e+01, 1.6415620000e+01,
                8.2877870000e+00, 4.1126340000e+00, 1.9988540000e+00,
                9.4429100000e-01, 3.4121100000e-01, 1.3435000000e-01,
                5.1735000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.1735000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.6450000000e-04, 1.5654000000e-03, 8.7954000000e-03,
                           3.3185200000e-02, 9.1953700000e-02, 1.8920170000e-01,
                           2.8058920000e-01, 3.1174740000e-01, 2.5541970000e-01,
                           1.2939540000e-01, 2.5860700000e-02},
                 doubles_t{8.6467410000e+02, 2.6103760000e+02, 1.0177030000e+02,
                           4.5116640000e+01, 2.1430690000e+01, 1.0659860000e+01,
                           5.3922870000e+00, 2.7044970000e+00, 1.3285440000e+00,
                           6.2645200000e-01, 2.6601300000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{6.2645200000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.6601300000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0630000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{5.4920000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.1900000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{4.6810000000e-01}));
    return abs_t(name, 32, r0, shells.begin(), shells.end());
} // cc_dash_pvqz_32

} // namespace chemcache
