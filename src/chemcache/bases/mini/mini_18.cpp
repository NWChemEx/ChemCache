/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "mini.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t mini_18() {
    // Basis Set name and origin point
    std::string name("mini");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{6.5158902531e-02, 3.8180671483e-01, 6.7644622627e-01},
      doubles_t{1.5369325000e+03, 2.3217765000e+02, 5.0521685000e+01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-9.6740497739e-02, 6.5274918474e-01, 4.1357279033e-01},
      doubles_t{6.6933949000e+01, 5.9185516000e+00, 2.3393420000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.0073558490e-01, -6.9626794761e-01, -4.2484346803e-01},
      doubles_t{4.0453072000e+00, 5.6570100000e-01, 2.0406480000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{1.0007909913e-01, 4.5422579605e-01, 6.1525919465e-01},
      doubles_t{7.4352915000e+01, 1.6631346000e+01, 4.5039275000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.3727569340e-01, 5.5835988446e-01, 3.4616479037e-01},
      doubles_t{1.3570912000e+00, 4.8811280000e-01, 1.6212590000e-01}));
    return abs_t(name, 18, r0, shells.begin(), shells.end());
} // mini_18

} // namespace chemcache
