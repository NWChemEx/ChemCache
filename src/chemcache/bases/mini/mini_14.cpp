/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "mini.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t mini_14() {
    // Basis Set name and origin point
    std::string name("mini");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{6.6405305184e-02, 3.8622193015e-01, 6.7224005248e-01},
      doubles_t{9.0923487000e+02, 1.3712456000e+02, 2.9714810000e+01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-9.0999399404e-02, 6.1161489599e-01, 4.5686019701e-01},
      doubles_t{3.9129423000e+01, 3.3359807000e+00, 1.2512594000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.6873279173e-01, 6.7545266689e-01, 4.2941917895e-01},
      doubles_t{1.8031012000e+00, 2.2638920000e-01, 8.2395900000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{1.0875250091e-01, 4.6351520387e-01, 6.1133430511e-01},
      doubles_t{3.7881761000e+01, 8.3045980000e+00, 2.1207924000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.3891300970e-01, 5.4229492202e-01, 3.4545281403e-01},
      doubles_t{4.4780250000e-01, 1.7083750000e-01, 6.2361800000e-02}));
    return abs_t(name, 14, r0, shells.begin(), shells.end());
} // mini_14

} // namespace chemcache
