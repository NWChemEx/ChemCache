/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pvdz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pvdz_23() {
    // Basis Set name and origin point
    std::string name("aug-cc-pvdz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{8.0399990000e-06,  6.2514020000e-05, 3.2865530000e-04,
                1.3856970000e-03,  5.0162170000e-03, 1.6069310000e-02,
                4.5742420000e-02,  1.1285440000e-01, 2.2543440000e-01,
                3.1404610000e-01,  2.2678190000e-01, 7.3340690000e-02,
                1.1024740000e-01,  1.1313580000e-01, 1.9712950000e-02,
                -4.7190880000e-04, 1.8616060000e-04, -6.2085980000e-05,
                7.2953140000e-05,  -6.3620620000e-06},
      doubles_t{3.3218570000e+06, 4.9743560000e+05, 1.1320270000e+05,
                3.2063330000e+04, 1.0459620000e+04, 3.7755060000e+03,
                1.4720400000e+03, 6.0993310000e+02, 2.6526340000e+02,
                1.1986070000e+02, 5.5448910000e+01, 2.4983720000e+01,
                1.1880560000e+01, 5.6603110000e+00, 2.4957030000e+00,
                1.1778660000e+00, 5.2004400000e-01, 1.1596500000e-01,
                5.8938000000e-02, 2.6946000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-4.5030030000e-06, -3.5012950000e-05, -1.8413390000e-04,
                -7.7692160000e-04, -2.8195050000e-03, -9.0874860000e-03,
                -2.6271340000e-02, -6.7127260000e-02, -1.4511300000e-01,
                -2.4124830000e-01, -2.4163140000e-01, 3.0673620000e-02,
                4.9704150000e-01,  4.9588750000e-01,  9.1818680000e-02,
                -5.3925140000e-03, 7.1023800000e-04,  -6.3631280000e-04,
                5.9799320000e-04,  -1.1008790000e-04},
      doubles_t{3.3218570000e+06, 4.9743560000e+05, 1.1320270000e+05,
                3.2063330000e+04, 1.0459620000e+04, 3.7755060000e+03,
                1.4720400000e+03, 6.0993310000e+02, 2.6526340000e+02,
                1.1986070000e+02, 5.5448910000e+01, 2.4983720000e+01,
                1.1880560000e+01, 5.6603110000e+00, 2.4957030000e+00,
                1.1778660000e+00, 5.2004400000e-01, 1.1596500000e-01,
                5.8938000000e-02, 2.6946000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{9.3206480000e-07,  7.2493060000e-06,  3.8119670000e-05,
                1.6102380000e-04,  5.8522100000e-04,  1.8975020000e-03,
                5.5509090000e-03,  1.4605840000e-02,  3.3429740000e-02,
                6.2357220000e-02,  7.3124350000e-02,  -1.9114720000e-02,
                -2.8172490000e-01, -4.4881510000e-01, 9.2026960000e-02,
                7.1101170000e-01,  4.3092740000e-01,  2.6045890000e-02,
                -1.1010490000e-02, 4.1063000000e-03},
      doubles_t{3.3218570000e+06, 4.9743560000e+05, 1.1320270000e+05,
                3.2063330000e+04, 1.0459620000e+04, 3.7755060000e+03,
                1.4720400000e+03, 6.0993310000e+02, 2.6526340000e+02,
                1.1986070000e+02, 5.5448910000e+01, 2.4983720000e+01,
                1.1880560000e+01, 5.6603110000e+00, 2.4957030000e+00,
                1.1778660000e+00, 5.2004400000e-01, 1.1596500000e-01,
                5.8938000000e-02, 2.6946000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.1589440000e-07, -1.6785190000e-06, -8.8312130000e-06,
                -3.7277690000e-05, -1.3560990000e-04, -4.3923510000e-04,
                -1.2869480000e-03, -3.3821490000e-03, -7.7656460000e-03,
                -1.4479850000e-02, -1.7155020000e-02, 4.6101010000e-03,
                6.8278310000e-02,  1.1613680000e-01,  -3.2770490000e-02,
                -2.2800000000e-01, -2.7939910000e-01, 2.7711650000e-01,
                5.8529990000e-01,  2.9639460000e-01},
      doubles_t{3.3218570000e+06, 4.9743560000e+05, 1.1320270000e+05,
                3.2063330000e+04, 1.0459620000e+04, 3.7755060000e+03,
                1.4720400000e+03, 6.0993310000e+02, 2.6526340000e+02,
                1.1986070000e+02, 5.5448910000e+01, 2.4983720000e+01,
                1.1880560000e+01, 5.6603110000e+00, 2.4957030000e+00,
                1.1778660000e+00, 5.2004400000e-01, 1.1596500000e-01,
                5.8938000000e-02, 2.6946000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-4.0934160000e-07, -3.2589560000e-06, -1.6563900000e-05,
                -7.3166890000e-05, -2.5127840000e-04, -8.7326570000e-04,
                -2.3476540000e-03, -6.8531500000e-03, -1.3764200000e-02,
                -3.0846790000e-02, -2.5622080000e-02, -1.0051230000e-02,
                1.7953300000e-01,  1.5224000000e-01,  9.4838870000e-02,
                -1.0148760000e+00, 2.3088100000e-01,  2.1133210000e+00,
                -1.2530480000e+00, -6.1395020000e-01},
      doubles_t{3.3218570000e+06, 4.9743560000e+05, 1.1320270000e+05,
                3.2063330000e+04, 1.0459620000e+04, 3.7755060000e+03,
                1.4720400000e+03, 6.0993310000e+02, 2.6526340000e+02,
                1.1986070000e+02, 5.5448910000e+01, 2.4983720000e+01,
                1.1880560000e+01, 5.6603110000e+00, 2.4957030000e+00,
                1.1778660000e+00, 5.2004400000e-01, 1.1596500000e-01,
                5.8938000000e-02, 2.6946000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.6946000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2320000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.3000000000e-05, 3.8400000000e-04, 2.2100000000e-03,
                9.6780000000e-03, 3.3936000000e-02, 9.5917000000e-02,
                2.0885300000e-01, 3.3066000000e-01, 3.3231200000e-01,
                1.5818800000e-01, 2.2252000000e-02, -1.5650000000e-03,
                -1.3530000000e-03, -2.6500000000e-04, 2.9000000000e-05,
                -1.1000000000e-05},
      doubles_t{1.3273200000e+04, 3.1421260000e+03, 1.0205880000e+03,
                3.9044070000e+02, 1.6550430000e+02, 7.5320060000e+01,
                3.6055030000e+01, 1.7804360000e+01, 9.0029290000e+00,
                4.5945440000e+00, 2.2767600000e+00, 1.1011780000e+00,
                5.1863800000e-01, 2.0056500000e-01, 8.1291000000e-02,
                3.1795000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.5000000000e-05, -1.3100000000e-04, -7.5500000000e-04,
                -3.3250000000e-03, -1.1811000000e-02, -3.4256000000e-02,
                -7.7363000000e-02, -1.2845600000e-01, -1.3507800000e-01,
                2.0838000000e-02, 3.2049900000e-01, 4.6026000000e-01,
                2.9534600000e-01, 4.9046000000e-02, -3.8240000000e-03,
                1.5850000000e-03},
      doubles_t{1.3273200000e+04, 3.1421260000e+03, 1.0205880000e+03,
                3.9044070000e+02, 1.6550430000e+02, 7.5320060000e+01,
                3.6055030000e+01, 1.7804360000e+01, 9.0029290000e+00,
                4.5945440000e+00, 2.2767600000e+00, 1.1011780000e+00,
                5.1863800000e-01, 2.0056500000e-01, 8.1291000000e-02,
                3.1795000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.0000000000e-06, 3.9000000000e-05, 2.2300000000e-04,
                9.9600000000e-04, 3.4980000000e-03, 1.0296000000e-02,
                2.2962000000e-02, 3.9208000000e-02, 3.9943000000e-02,
                -7.1210000000e-03, -1.1622500000e-01, -1.6949600000e-01,
                -1.5537400000e-01, 3.9502200000e-01, 6.7890800000e-01,
                8.3122000000e-02},
      doubles_t{1.3273200000e+04, 3.1421260000e+03, 1.0205880000e+03,
                3.9044070000e+02, 1.6550430000e+02, 7.5320060000e+01,
                3.6055030000e+01, 1.7804360000e+01, 9.0029290000e+00,
                4.5945440000e+00, 2.2767600000e+00, 1.1011780000e+00,
                5.1863800000e-01, 2.0056500000e-01, 8.1291000000e-02,
                3.1795000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.0000000000e-06, 3.2000000000e-05, 1.8300000000e-04,
                8.0200000000e-04, 2.8620000000e-03, 8.2870000000e-03,
                1.8870000000e-02, 3.1307000000e-02, 3.3660000000e-02,
                -9.4790000000e-03, -9.2313000000e-02, -1.4898900000e-01,
                -8.3644000000e-02, 2.4933900000e-01, 5.8051500000e-01,
                3.2238000000e-01},
      doubles_t{1.3273200000e+04, 3.1421260000e+03, 1.0205880000e+03,
                3.9044070000e+02, 1.6550430000e+02, 7.5320060000e+01,
                3.6055030000e+01, 1.7804360000e+01, 9.0029290000e+00,
                4.5945440000e+00, 2.2767600000e+00, 1.1011780000e+00,
                5.1863800000e-01, 2.0056500000e-01, 8.1291000000e-02,
                3.1795000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.1795000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2440000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{3.5950000000e-03, 2.5210000000e-02, 9.4786000000e-02,
                           2.3036300000e-01, 3.5289400000e-01, 3.7041400000e-01,
                           2.4571800000e-01, 6.0993000000e-02},
                 doubles_t{7.7611500000e+01, 2.2915900000e+01, 8.2795400000e+00,
                           3.3099300000e+00, 1.3586300000e+00, 5.4135000000e-01,
                           2.0235600000e-01, 6.7568000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 2,
      doubles_t{-3.8180000000e-03, -2.6717000000e-02, -1.0369000000e-01,
                -2.4768900000e-01, -3.1152300000e-01, -2.2827000000e-02,
                5.6972600000e-01, 4.1949300000e-01},
      doubles_t{7.7611500000e+01, 2.2915900000e+01, 8.2795400000e+00,
                3.3099300000e+00, 1.3586300000e+00, 5.4135000000e-01,
                2.0235600000e-01, 6.7568000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{6.7568000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.2560000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 3, doubles_t{3.9006800000e-01, 8.0084100000e-01},
                 doubles_t{1.7488000000e+00, 4.0570000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3112000000e-01}));
    return abs_t(name, 23, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pvdz_23

} // namespace chemcache
