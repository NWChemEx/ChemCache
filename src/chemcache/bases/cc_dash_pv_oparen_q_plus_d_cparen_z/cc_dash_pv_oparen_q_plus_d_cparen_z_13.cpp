/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pv_oparen_q_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pv_oparen_q_plus_d_cparen_z_13() {
    // Basis Set name and origin point
    std::string name("cc-pv(q+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.7821900000e-05, 2.1633000000e-04, 1.1375400000e-03,
                4.7963500000e-03, 1.7238900000e-02, 5.3806600000e-02,
                1.4132600000e-01, 2.8926800000e-01, 3.8482500000e-01,
                2.3285200000e-01, 2.9333000000e-02, -3.0057400000e-03,
                1.6667300000e-03, -6.0601700000e-04, 4.3135500000e-04,
                -1.2291900000e-04},
      doubles_t{4.1960000000e+05, 6.2830000000e+04, 1.4290000000e+04,
                4.0380000000e+03, 1.3120000000e+03, 4.7050000000e+02,
                1.8180000000e+02, 7.4460000000e+01, 3.1900000000e+01,
                1.3960000000e+01, 5.1800000000e+00, 2.2650000000e+00,
                9.6640000000e-01, 2.4470000000e-01, 1.1840000000e-01,
                5.0210000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-7.2375400000e-06, -5.6173300000e-05, -2.9652800000e-04,
                -1.2491300000e-03, -4.5510100000e-03, -1.4439300000e-02,
                -4.0346400000e-02, -9.2261800000e-02, -1.6451000000e-01,
                -1.4129600000e-01, 1.9536500000e-01, 5.7247500000e-01,
                3.7404100000e-01, 2.3411900000e-02, -9.0519700000e-03,
                2.1117400000e-03},
      doubles_t{4.1960000000e+05, 6.2830000000e+04, 1.4290000000e+04,
                4.0380000000e+03, 1.3120000000e+03, 4.7050000000e+02,
                1.8180000000e+02, 7.4460000000e+01, 3.1900000000e+01,
                1.3960000000e+01, 5.1800000000e+00, 2.2650000000e+00,
                9.6640000000e-01, 2.4470000000e-01, 1.1840000000e-01,
                5.0210000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.4470000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1840000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.6715000000e-06, 1.2964100000e-05, 6.8510100000e-05,
                2.8827400000e-04, 1.0527600000e-03, 3.3387800000e-03,
                9.3921700000e-03, 2.1604700000e-02, 3.9587300000e-02,
                3.4918000000e-02, -5.2841500000e-02, -1.9187800000e-01,
                -2.5411500000e-01, 2.7507000000e-01, 6.0474300000e-01,
                2.8762900000e-01},
      doubles_t{4.1960000000e+05, 6.2830000000e+04, 1.4290000000e+04,
                4.0380000000e+03, 1.3120000000e+03, 4.7050000000e+02,
                1.8180000000e+02, 7.4460000000e+01, 3.1900000000e+01,
                1.3960000000e+01, 5.1800000000e+00, 2.2650000000e+00,
                9.6640000000e-01, 2.4470000000e-01, 1.1840000000e-01,
                5.0210000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0210000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{4.9175500000e-04, 4.1584300000e-03, 2.1253800000e-02,
                           7.6405800000e-02, 1.9427700000e-01, 3.3442800000e-01,
                           3.7502600000e-01, 2.0404100000e-01, 2.1373800000e-02,
                           -2.0214400000e-03, 8.1725100000e-04},
                 doubles_t{8.9130000000e+02, 2.1130000000e+02, 6.8280000000e+01,
                           2.5700000000e+01, 1.0630000000e+01, 4.6020000000e+00,
                           2.0150000000e+00, 8.7060000000e-01, 2.9720000000e-01,
                           1.1000000000e-01, 3.9890000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9720000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1000000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-8.8869500000e-05, -7.4582300000e-04, -3.8702500000e-03,
                -1.3935000000e-02, -3.6686000000e-02, -6.2779700000e-02,
                -7.8960200000e-02, -2.8858900000e-02, 2.3825600000e-01,
                5.5136300000e-01, 3.5438500000e-01},
      doubles_t{8.9130000000e+02, 2.1130000000e+02, 6.8280000000e+01,
                2.5700000000e+01, 1.0630000000e+01, 4.6020000000e+00,
                2.0150000000e+00, 8.7060000000e-01, 2.9720000000e-01,
                1.1000000000e-01, 3.9890000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.9890000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9700000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.3700000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9500000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{8.0000000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{4.0100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5400000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{3.5700000000e-01}));
    return abs_t(name, 13, r0, shells.begin(), shells.end());
} // cc_dash_pv_oparen_q_plus_d_cparen_z_13

} // namespace chemcache
