/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pv_oparen_q_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pv_oparen_q_plus_d_cparen_z_31() {
    // Basis Set name and origin point
    std::string name("cc-pv(q+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{4.1000000000e-06,  3.1600000000e-05,  1.6620000000e-04,
                7.0170000000e-04,  2.5508000000e-03,  8.2653000000e-03,
                2.4195000000e-02,  6.3657200000e-02,  1.4576510000e-01,
                2.7033130000e-01,  3.4915710000e-01,  2.3744330000e-01,
                4.8083300000e-02,  -2.2966000000e-03, 1.7904000000e-03,
                -8.2760000000e-04, 3.5430000000e-04,  -1.4110000000e-04,
                5.0200000000e-05,  -3.5000000000e-05, 1.0500000000e-05},
      doubles_t{1.1274500000e+07, 1.6880530000e+06, 3.8414080000e+05,
                1.0880700000e+05, 3.5497690000e+04, 1.2815100000e+04,
                4.9981090000e+03, 2.0728850000e+03, 9.0374580000e+02,
                4.1044310000e+02, 1.9260640000e+02, 9.2049680000e+01,
                4.2047810000e+01, 2.1069220000e+01, 1.0447920000e+01,
                4.7776580000e+00, 2.2825660000e+00, 1.0353030000e+00,
                2.5767400000e-01, 1.1917900000e-01, 5.1294000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.3000000000e-06, -9.8000000000e-06, -5.1500000000e-05,
                -2.1760000000e-04, -7.9320000000e-04, -2.5821000000e-03,
                -7.6652000000e-03, -2.0756700000e-02, -5.0775800000e-02,
                -1.0738020000e-01, -1.8065200000e-01, -1.7367010000e-01,
                1.1082510000e-01,  5.4183660000e-01,  4.4678990000e-01,
                7.6210500000e-02,  -9.3710000000e-04, 1.7806000000e-03,
                -3.4700000000e-04, 2.4170000000e-04,  -7.3200000000e-05},
      doubles_t{1.1274500000e+07, 1.6880530000e+06, 3.8414080000e+05,
                1.0880700000e+05, 3.5497690000e+04, 1.2815100000e+04,
                4.9981090000e+03, 2.0728850000e+03, 9.0374580000e+02,
                4.1044310000e+02, 1.9260640000e+02, 9.2049680000e+01,
                4.2047810000e+01, 2.1069220000e+01, 1.0447920000e+01,
                4.7776580000e+00, 2.2825660000e+00, 1.0353030000e+00,
                2.5767400000e-01, 1.1917900000e-01, 5.1294000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{5.0000000000e-07,  3.7000000000e-06,  1.9700000000e-05,
                8.3000000000e-05,  3.0290000000e-04,  9.8500000000e-04,
                2.9341000000e-03,  7.9572000000e-03,  1.9676100000e-02,
                4.2178300000e-02,  7.3864500000e-02,  7.4753100000e-02,
                -5.3410800000e-02, -3.5739190000e-01, -4.2507130000e-01,
                2.0109920000e-01,  7.1459660000e-01,  3.6881490000e-01,
                1.5384100000e-02,  -5.7386000000e-03, 1.4275000000e-03},
      doubles_t{1.1274500000e+07, 1.6880530000e+06, 3.8414080000e+05,
                1.0880700000e+05, 3.5497690000e+04, 1.2815100000e+04,
                4.9981090000e+03, 2.0728850000e+03, 9.0374580000e+02,
                4.1044310000e+02, 1.9260640000e+02, 9.2049680000e+01,
                4.2047810000e+01, 2.1069220000e+01, 1.0447920000e+01,
                4.7776580000e+00, 2.2825660000e+00, 1.0353030000e+00,
                2.5767400000e-01, 1.1917900000e-01, 5.1294000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.5767400000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1917900000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.0000000000e-07, -9.0000000000e-07, -4.6000000000e-06,
                -1.9300000000e-05, -7.0500000000e-05, -2.2900000000e-04,
                -6.8350000000e-04, -1.8505000000e-03, -4.5930000000e-03,
                -9.8343000000e-03, -1.7384900000e-02, -1.7575200000e-02,
                1.2525400000e-02,  9.0340000000e-02,  1.1047210000e-01,
                -6.1211900000e-02, -2.5617680000e-01, -2.6037720000e-01,
                3.4930760000e-01,  5.9563790000e-01,  2.3672850000e-01},
      doubles_t{1.1274500000e+07, 1.6880530000e+06, 3.8414080000e+05,
                1.0880700000e+05, 3.5497690000e+04, 1.2815100000e+04,
                4.9981090000e+03, 2.0728850000e+03, 9.0374580000e+02,
                4.1044310000e+02, 1.9260640000e+02, 9.2049680000e+01,
                4.2047810000e+01, 2.1069220000e+01, 1.0447920000e+01,
                4.7776580000e+00, 2.2825660000e+00, 1.0353030000e+00,
                2.5767400000e-01, 1.1917900000e-01, 5.1294000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{5.1294000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{5.4700000000e-05, 4.8650000000e-04, 2.7990000000e-03,
                           1.2239600000e-02, 4.2747600000e-02, 1.1871870000e-01,
                           2.4858280000e-01, 3.6016220000e-01, 2.9501710000e-01,
                           9.8479400000e-02, 8.7671000000e-03, 1.3961000000e-03,
                           7.7000000000e-05, 6.8700000000e-05,
                           -2.9400000000e-05, 8.6000000000e-06},
                 doubles_t{2.2059770000e+04, 5.2223130000e+03, 1.6960600000e+03,
                           6.4876570000e+02, 2.7510270000e+02, 1.2534630000e+02,
                           6.0054330000e+01, 2.9723770000e+01, 1.5039780000e+01,
                           7.5722730000e+00, 3.7386760000e+00, 1.7967880000e+00,
                           8.2991000000e-01, 2.7287400000e-01, 1.0154000000e-01,
                           3.7658000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-2.0700000000e-05, -1.8460000000e-04, -1.0640000000e-03,
                -4.6946000000e-03, -1.6648600000e-02, -4.7811400000e-02,
                -1.0453030000e-01, -1.6129650000e-01, -1.1431700000e-01,
                1.4590560000e-01, 4.2719890000e-01, 4.2404150000e-01,
                1.5994400000e-01, 9.5059000000e-03, -8.6090000000e-04,
                3.5080000000e-04},
      doubles_t{2.2059770000e+04, 5.2223130000e+03, 1.6960600000e+03,
                6.4876570000e+02, 2.7510270000e+02, 1.2534630000e+02,
                6.0054330000e+01, 2.9723770000e+01, 1.5039780000e+01,
                7.5722730000e+00, 3.7386760000e+00, 1.7967880000e+00,
                8.2991000000e-01, 2.7287400000e-01, 1.0154000000e-01,
                3.7658000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7287400000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0154000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{3.4000000000e-06, 3.0000000000e-05, 1.7500000000e-04,
                7.6420000000e-04, 2.7458000000e-03, 7.8140000000e-03,
                1.7421500000e-02, 2.6485200000e-02, 1.9395000000e-02,
                -3.1312900000e-02, -8.0163400000e-02, -1.0017290000e-01,
                -1.0587800000e-02, 2.8432370000e-01, 5.4574770000e-01,
                3.1406200000e-01},
      doubles_t{2.2059770000e+04, 5.2223130000e+03, 1.6960600000e+03,
                6.4876570000e+02, 2.7510270000e+02, 1.2534630000e+02,
                6.0054330000e+01, 2.9723770000e+01, 1.5039780000e+01,
                7.5722730000e+00, 3.7386760000e+00, 1.7967880000e+00,
                8.2991000000e-01, 2.7287400000e-01, 1.0154000000e-01,
                3.7658000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.7658000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.7450000000e-04, 1.6577000000e-03, 9.2899000000e-03,
                           3.4890500000e-02, 9.6345300000e-02, 1.9557030000e-01,
                           2.8359420000e-01, 3.0825150000e-01, 2.5196200000e-01,
                           1.3371440000e-01, 2.9728600000e-02},
                 doubles_t{7.6643700000e+02, 2.3100430000e+02, 8.9781240000e+01,
                           3.9546680000e+01, 1.8607580000e+01, 9.1512870000e+00,
                           4.5650050000e+00, 2.2530660000e+00, 1.0867230000e+00,
                           5.0330400000e-01, 2.1228300000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0330400000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.1228300000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{8.2800000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{4.7100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{4.0320000000e-01}));
    return abs_t(name, 31, r0, shells.begin(), shells.end());
} // cc_dash_pv_oparen_q_plus_d_cparen_z_31

} // namespace chemcache
