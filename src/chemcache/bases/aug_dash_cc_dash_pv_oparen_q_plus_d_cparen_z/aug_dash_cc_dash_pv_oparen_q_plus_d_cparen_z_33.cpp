/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pv_oparen_q_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pv_oparen_q_plus_d_cparen_z_33() {
    // Basis Set name and origin point
    std::string name("aug-cc-pv(q+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{3.8000000000e-06,  2.9200000000e-05,  1.5380000000e-04,
                6.4960000000e-04,  2.3625000000e-03,  7.6609000000e-03,
                2.2467200000e-02,  5.9342500000e-02,  1.3710150000e-01,
                2.5894720000e-01,  3.4728470000e-01,  2.5342470000e-01,
                5.9626600000e-02,  -1.1861000000e-03, 1.7791000000e-03,
                -8.4550000000e-04, 3.6600000000e-04,  -1.6220000000e-04,
                6.4100000000e-05,  -4.0300000000e-05, 1.1200000000e-05},
      doubles_t{1.3600340000e+07, 2.0365070000e+06, 4.6343280000e+05,
                1.3125990000e+05, 4.2819190000e+04, 1.5457020000e+04,
                6.0284580000e+03, 2.5005600000e+03, 1.0906150000e+03,
                4.9562150000e+02, 2.3281670000e+02, 1.1163120000e+02,
                5.2269950000e+01, 2.6149880000e+01, 1.3018760000e+01,
                6.1554320000e+00, 2.9591270000e+00, 1.3738740000e+00,
                4.0885000000e-01, 1.9451100000e-01, 8.3641000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.2000000000e-06, -9.1000000000e-06, -4.8000000000e-05,
                -2.0280000000e-04, -7.3920000000e-04, -2.4089000000e-03,
                -7.1538000000e-03, -1.9433300000e-02, -4.7747100000e-02,
                -1.0226390000e-01, -1.7583260000e-01, -1.8374940000e-01,
                6.4827600000e-02,  5.1092810000e-01,  4.8731430000e-01,
                1.0336360000e-01,  6.3550000000e-04,  1.9766000000e-03,
                -4.5040000000e-04, 2.6320000000e-04,  -7.7400000000e-05},
      doubles_t{1.3600340000e+07, 2.0365070000e+06, 4.6343280000e+05,
                1.3125990000e+05, 4.2819190000e+04, 1.5457020000e+04,
                6.0284580000e+03, 2.5005600000e+03, 1.0906150000e+03,
                4.9562150000e+02, 2.3281670000e+02, 1.1163120000e+02,
                5.2269950000e+01, 2.6149880000e+01, 1.3018760000e+01,
                6.1554320000e+00, 2.9591270000e+00, 1.3738740000e+00,
                4.0885000000e-01, 1.9451100000e-01, 8.3641000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{5.0000000000e-07,  3.6000000000e-06,  1.8700000000e-05,
                7.9000000000e-05,  2.8810000000e-04,  9.3860000000e-04,
                2.7946000000e-03,  7.6098000000e-03,  1.8869900000e-02,
                4.1006300000e-02,  7.3127500000e-02,  8.0719400000e-02,
                -3.1630000000e-02, -3.3173760000e-01, -4.6382210000e-01,
                1.0369900000e-01,  7.1829860000e-01,  4.3533050000e-01,
                2.4398900000e-02,  -6.6759000000e-03, 1.5921000000e-03},
      doubles_t{1.3600340000e+07, 2.0365070000e+06, 4.6343280000e+05,
                1.3125990000e+05, 4.2819190000e+04, 1.5457020000e+04,
                6.0284580000e+03, 2.5005600000e+03, 1.0906150000e+03,
                4.9562150000e+02, 2.3281670000e+02, 1.1163120000e+02,
                5.2269950000e+01, 2.6149880000e+01, 1.3018760000e+01,
                6.1554320000e+00, 2.9591270000e+00, 1.3738740000e+00,
                4.0885000000e-01, 1.9451100000e-01, 8.3641000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.0885000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9451100000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.0000000000e-07, -1.0000000000e-06, -5.2000000000e-06,
                -2.1700000000e-05, -7.9400000000e-05, -2.5830000000e-04,
                -7.7090000000e-04, -2.0946000000e-03, -5.2164000000e-03,
                -1.1316300000e-02, -2.0393500000e-02, -2.2466400000e-02,
                8.5590000000e-03,  9.9569200000e-02,  1.4345010000e-01,
                -3.7190100000e-02, -3.0853680000e-01, -3.4786490000e-01,
                3.4054040000e-01,  6.3810750000e-01,  2.4900790000e-01},
      doubles_t{1.3600340000e+07, 2.0365070000e+06, 4.6343280000e+05,
                1.3125990000e+05, 4.2819190000e+04, 1.5457020000e+04,
                6.0284580000e+03, 2.5005600000e+03, 1.0906150000e+03,
                4.9562150000e+02, 2.3281670000e+02, 1.1163120000e+02,
                5.2269950000e+01, 2.6149880000e+01, 1.3018760000e+01,
                6.1554320000e+00, 2.9591270000e+00, 1.3738740000e+00,
                4.0885000000e-01, 1.9451100000e-01, 8.3641000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{8.3641000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.2499000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{5.3300000000e-05, 4.7440000000e-04, 2.7330000000e-03,
                           1.1987100000e-02, 4.2076600000e-02, 1.1758910000e-01,
                           2.4787470000e-01, 3.6051480000e-01, 2.9559210000e-01,
                           9.9216300000e-02, 8.7866000000e-03, 1.4462000000e-03,
                           -4.4700000000e-05, 9.4100000000e-05,
                           -4.3200000000e-05, 1.1800000000e-05},
                 doubles_t{2.5570420000e+04, 6.0529240000e+03, 1.9657000000e+03,
                           7.5177230000e+02, 3.1868140000e+02, 1.4514750000e+02,
                           6.9541160000e+01, 3.4451380000e+01, 1.7460610000e+01,
                           8.8086090000e+00, 4.3786460000e+00, 2.1444050000e+00,
                           1.0293500000e+00, 4.0463600000e-01, 1.6562200000e-01,
                           6.5610000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-2.0800000000e-05, -1.8550000000e-04, -1.0704000000e-03,
                -4.7392000000e-03, -1.6888500000e-02, -4.8844500000e-02,
                -1.0759890000e-01, -1.6693760000e-01, -1.1692140000e-01,
                1.5145050000e-01, 4.3717310000e-01, 4.1970780000e-01,
                1.4376360000e-01, 8.6029000000e-03, -1.7300000000e-04,
                6.8800000000e-05},
      doubles_t{2.5570420000e+04, 6.0529240000e+03, 1.9657000000e+03,
                7.5177230000e+02, 3.1868140000e+02, 1.4514750000e+02,
                6.9541160000e+01, 3.4451380000e+01, 1.7460610000e+01,
                8.8086090000e+00, 4.3786460000e+00, 2.1444050000e+00,
                1.0293500000e+00, 4.0463600000e-01, 1.6562200000e-01,
                6.5610000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{4.0463600000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.6000000000e-06, 4.1200000000e-05, 2.3930000000e-04,
                1.0531000000e-03, 3.7863000000e-03, 1.0910100000e-02,
                2.4385300000e-02, 3.7648200000e-02, 2.6513700000e-02,
                -4.4546400000e-02, -1.1676810000e-01, -1.4094410000e-01,
                -1.2121000000e-03, 3.6204980000e-01, 5.3888610000e-01,
                2.3358680000e-01},
      doubles_t{2.5570420000e+04, 6.0529240000e+03, 1.9657000000e+03,
                7.5177230000e+02, 3.1868140000e+02, 1.4514750000e+02,
                6.9541160000e+01, 3.4451380000e+01, 1.7460610000e+01,
                8.8086090000e+00, 4.3786460000e+00, 2.1444050000e+00,
                1.0293500000e+00, 4.0463600000e-01, 1.6562200000e-01,
                6.5610000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.6562200000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{6.5610000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3698000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.4620000000e-04, 1.4034000000e-03, 8.0195000000e-03,
                           3.1004800000e-02, 8.7847800000e-02, 1.8522500000e-01,
                           2.8082510000e-01, 3.1631980000e-01, 2.5711920000e-01,
                           1.2406850000e-01, 2.2665300000e-02},
                 doubles_t{9.9697960000e+02, 3.0098520000e+02, 1.1723470000e+02,
                           5.1956900000e+01, 2.4689440000e+01, 1.2295170000e+01,
                           6.2446520000e+00, 3.1554600000e+00, 1.5680490000e+00,
                           7.4864700000e-01, 3.1912500000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{7.4864700000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.1912500000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3000000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.3100000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{6.4400000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.6400000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1320000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{5.4650000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3900000000e-01}));
    return abs_t(name, 33, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pv_oparen_q_plus_d_cparen_z_33

} // namespace chemcache
