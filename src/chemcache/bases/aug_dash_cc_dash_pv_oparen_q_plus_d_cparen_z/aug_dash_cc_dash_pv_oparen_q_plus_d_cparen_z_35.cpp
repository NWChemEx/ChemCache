/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pv_oparen_q_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pv_oparen_q_plus_d_cparen_z_35() {
    // Basis Set name and origin point
    std::string name("aug-cc-pv(q+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{3.4000000000e-06,  2.6700000000e-05,  1.4040000000e-04,
                5.9270000000e-04,  2.1561000000e-03,  6.9959000000e-03,
                2.0564500000e-02,  5.4589300000e-02,  1.2752260000e-01,
                2.4597800000e-01,  3.4365080000e-01,  2.7025300000e-01,
                7.4479500000e-02,  8.7870000000e-04,  1.5755000000e-03,
                -7.6020000000e-04, 3.2110000000e-04,  -1.5860000000e-04,
                6.5900000000e-05,  -3.7400000000e-05, 1.0000000000e-05},
      doubles_t{1.6475000000e+07, 2.4666000000e+06, 5.6131000000e+05,
                1.5899000000e+05, 5.1869000000e+04, 1.8726000000e+04,
                7.3036000000e+03, 3.0291000000e+03, 1.3208000000e+03,
                6.0003000000e+02, 2.8190000000e+02, 1.3554000000e+02,
                6.4870000000e+01, 3.2129000000e+01, 1.6037000000e+01,
                7.7849000000e+00, 3.7247000000e+00, 1.7583000000e+00,
                5.8331000000e-01, 2.7856000000e-01, 1.1829000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.1000000000e-06, -8.4000000000e-06, -4.4100000000e-05,
                -1.8620000000e-04, -6.7830000000e-04, -2.2122000000e-03,
                -6.5752000000e-03, -1.7932800000e-02, -4.4332100000e-02,
                -9.6347800000e-02, -1.6968140000e-01, -1.9207690000e-01,
                2.0873100000e-02,  4.7449960000e-01,  5.2149070000e-01,
                1.3480010000e-01,  3.6614000000e-03,  1.8840000000e-03,
                -4.5820000000e-04, 2.1650000000e-04,  -6.7800000000e-05},
      doubles_t{1.6475000000e+07, 2.4666000000e+06, 5.6131000000e+05,
                1.5899000000e+05, 5.1869000000e+04, 1.8726000000e+04,
                7.3036000000e+03, 3.0291000000e+03, 1.3208000000e+03,
                6.0003000000e+02, 2.8190000000e+02, 1.3554000000e+02,
                6.4870000000e+01, 3.2129000000e+01, 1.6037000000e+01,
                7.7849000000e+00, 3.7247000000e+00, 1.7583000000e+00,
                5.8331000000e-01, 2.7856000000e-01, 1.1829000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{4.0000000000e-07,  3.3000000000e-06,  1.7500000000e-05,
                7.4000000000e-05,  2.6970000000e-04,  8.7990000000e-04,
                2.6198000000e-03,  7.1671000000e-03,  1.7856100000e-02,
                3.9396000000e-02,  7.1710200000e-02,  8.5887700000e-02,
                -1.0386100000e-02, -3.0401350000e-01, -4.9331780000e-01,
                1.6089000000e-02,  7.1466860000e-01,  4.9047950000e-01,
                3.3757300000e-02,  -6.7925000000e-03, 1.6916000000e-03},
      doubles_t{1.6475000000e+07, 2.4666000000e+06, 5.6131000000e+05,
                1.5899000000e+05, 5.1869000000e+04, 1.8726000000e+04,
                7.3036000000e+03, 3.0291000000e+03, 1.3208000000e+03,
                6.0003000000e+02, 2.8190000000e+02, 1.3554000000e+02,
                6.4870000000e+01, 3.2129000000e+01, 1.6037000000e+01,
                7.7849000000e+00, 3.7247000000e+00, 1.7583000000e+00,
                5.8331000000e-01, 2.7856000000e-01, 1.1829000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{5.8331000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7856000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.0000000000e-07, -1.0000000000e-06, -5.4000000000e-06,
                -2.2700000000e-05, -8.2700000000e-05, -2.6940000000e-04,
                -8.0420000000e-04, -2.1949000000e-03, -5.4939000000e-03,
                -1.2096000000e-02, -2.2262300000e-02, -2.6606300000e-02,
                2.7580000000e-03,  1.0168030000e-01,  1.7041320000e-01,
                -6.2220000000e-03, -3.4525700000e-01, -4.2348400000e-01,
                3.3547200000e-01,  6.7797240000e-01,  2.5230800000e-01},
      doubles_t{1.6475000000e+07, 2.4666000000e+06, 5.6131000000e+05,
                1.5899000000e+05, 5.1869000000e+04, 1.8726000000e+04,
                7.3036000000e+03, 3.0291000000e+03, 1.3208000000e+03,
                6.0003000000e+02, 2.8190000000e+02, 1.3554000000e+02,
                6.4870000000e+01, 3.2129000000e+01, 1.6037000000e+01,
                7.7849000000e+00, 3.7247000000e+00, 1.7583000000e+00,
                5.8331000000e-01, 2.7856000000e-01, 1.1829000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1829000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.4270000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{6.1900000000e-05, 5.4990000000e-04, 3.1620000000e-03,
                           1.3797900000e-02, 4.7981200000e-02, 1.3157100000e-01,
                           2.6858610000e-01, 3.6834730000e-01, 2.7113630000e-01,
                           7.6222200000e-02, 4.6749000000e-03, 1.2565000000e-03,
                           -2.3570000000e-04, 1.3320000000e-04,
                           -6.8900000000e-05, 1.3800000000e-05},
                 doubles_t{2.6607000000e+04, 6.2982000000e+03, 2.0452000000e+03,
                           7.8216000000e+02, 3.3163000000e+02, 1.5111000000e+02,
                           7.2392000000e+01, 3.5862000000e+01, 1.8134000000e+01,
                           9.0430000000e+00, 4.4500000000e+00, 2.1661000000e+00,
                           9.9628000000e-01, 4.5443000000e-01, 1.9404000000e-01,
                           7.8997000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-2.4800000000e-05, -2.2120000000e-04, -1.2736000000e-03,
                -5.6179000000e-03, -1.9860000000e-02, -5.6553100000e-02,
                -1.2094790000e-01, -1.7730980000e-01, -9.2147200000e-02,
                2.1876830000e-01, 4.8546700000e-01, 3.7219700000e-01,
                7.7690700000e-02, 6.5410000000e-04, 1.7998000000e-03,
                -6.5500000000e-05},
      doubles_t{2.6607000000e+04, 6.2982000000e+03, 2.0452000000e+03,
                7.8216000000e+02, 3.3163000000e+02, 1.5111000000e+02,
                7.2392000000e+01, 3.5862000000e+01, 1.8134000000e+01,
                9.0430000000e+00, 4.4500000000e+00, 2.1661000000e+00,
                9.9628000000e-01, 4.5443000000e-01, 1.9404000000e-01,
                7.8997000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{4.5443000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{6.4000000000e-06, 5.7200000000e-05, 3.2970000000e-04,
                1.4562000000e-03, 5.1591000000e-03, 1.4761700000e-02,
                3.1769400000e-02, 4.7068000000e-02, 2.2387100000e-02,
                -7.2025400000e-02, -1.6264290000e-01, -1.4965030000e-01,
                1.0645170000e-01, 4.3602660000e-01, 4.6805230000e-01,
                1.6915130000e-01},
      doubles_t{2.6607000000e+04, 6.2982000000e+03, 2.0452000000e+03,
                7.8216000000e+02, 3.3163000000e+02, 1.5111000000e+02,
                7.2392000000e+01, 3.5862000000e+01, 1.8134000000e+01,
                9.0430000000e+00, 4.4500000000e+00, 2.1661000000e+00,
                9.9628000000e-01, 4.5443000000e-01, 1.9404000000e-01,
                7.8997000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9404000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{7.8997000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.0513000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.1900000000e-04, 1.1551000000e-03, 6.7648000000e-03,
                           2.7301700000e-02, 8.0929800000e-02, 1.7940110000e-01,
                           2.8400860000e-01, 3.2667970000e-01, 2.5849000000e-01,
                           1.1289460000e-01, 1.7260500000e-02},
                 doubles_t{1.2896000000e+03, 3.8975000000e+02, 1.5176000000e+02,
                           6.7223000000e+01, 3.1913000000e+01, 1.5857000000e+01,
                           8.0545000000e+00, 4.0887000000e+00, 2.0556000000e+00,
                           9.9509000000e-01, 4.2313000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{9.9509000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.2313000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.7790000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{8.2900000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{8.2570000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.4070000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.7480000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{6.4910000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{3.1100000000e-01}));
    return abs_t(name, 35, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pv_oparen_q_plus_d_cparen_z_35

} // namespace chemcache
