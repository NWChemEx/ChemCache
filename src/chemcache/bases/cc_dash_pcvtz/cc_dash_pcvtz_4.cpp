/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pcvtz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pcvtz_4() {
    // Basis Set name and origin point
    std::string name("cc-pcvtz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.6040000000e+00}));
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{2.3600000000e-04, 1.8260000000e-03, 9.4520000000e-03,
                           3.7957000000e-02, 1.1996500000e-01, 2.8216200000e-01,
                           4.2740400000e-01, 2.6627800000e-01, 1.8193000000e-02,
                           -7.2750000000e-03, 1.9030000000e-03},
                 doubles_t{6.8630000000e+03, 1.0300000000e+03, 2.3470000000e+02,
                           6.6560000000e+01, 2.1690000000e+01, 7.7340000000e+00,
                           2.9160000000e+00, 1.1300000000e+00, 2.5770000000e-01,
                           1.1010000000e-01, 4.4090000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.5770000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-4.3000000000e-05, -3.3300000000e-04, -1.7360000000e-03,
                -7.0120000000e-03, -2.3126000000e-02, -5.8138000000e-02,
                -1.1455600000e-01, -1.3590800000e-01, 2.2802600000e-01,
                5.7744100000e-01, 3.1787300000e-01},
      doubles_t{6.8630000000e+03, 1.0300000000e+03, 2.3470000000e+02,
                6.6560000000e+01, 2.1690000000e+01, 7.7340000000e+00,
                2.9160000000e+00, 1.1300000000e+00, 2.5770000000e-01,
                1.1010000000e-01, 4.4090000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.4090000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.6170000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4497000000e+01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.7870000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4380000000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{1.0736000000e-02, 6.2854000000e-02, 2.4818000000e-01,
                           5.2369900000e-01, 3.5342500000e-01},
                 doubles_t{7.4360000000e+00, 1.5770000000e+00, 4.3520000000e-01,
                           1.4380000000e-01, 4.9940000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{4.9940000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{9.1830000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.4800000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8030000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.2500000000e-01}));
    return abs_t(name, 4, r0, shells.begin(), shells.end());
} // cc_dash_pcvtz_4

} // namespace chemcache
