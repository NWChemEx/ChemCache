/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pvtz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pvtz_34() {
    // Basis Set name and origin point
    std::string name("aug-cc-pvtz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{6.3000000000e-06,  4.8900000000e-05,  2.5740000000e-04,
                1.0861000000e-03,  3.9399000000e-03,  1.2704100000e-02,
                3.6715600000e-02,  9.3867200000e-02,  2.0176770000e-01,
                3.2805400000e-01,  3.2383340000e-01,  1.3523370000e-01,
                1.1707500000e-02,  -3.4360000000e-04, 1.6650000000e-04,
                -1.1880000000e-04, 2.0400000000e-05,  -1.1700000000e-05,
                8.3000000000e-06,  -1.9000000000e-06},
      doubles_t{9.5636000000e+06, 1.4321000000e+06, 3.2591000000e+05,
                9.2312000000e+04, 3.0116000000e+04, 1.0872000000e+04,
                4.2401000000e+03, 1.7584000000e+03, 7.6659000000e+02,
                3.4843000000e+02, 1.6403000000e+02, 7.9142000000e+01,
                3.5524000000e+01, 1.7305000000e+01, 8.3784000000e+00,
                3.7405000000e+00, 1.6890000000e+00, 5.0927000000e-01,
                2.5520000000e-01, 1.0651000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.0000000000e-06, -1.5300000000e-05, -8.0600000000e-05,
                -3.4000000000e-04, -1.2397000000e-03, -4.0177000000e-03,
                -1.1867200000e-02, -3.1534000000e-02, -7.4643900000e-02,
                -1.4521790000e-01, -2.0384410000e-01, -7.8871100000e-02,
                3.8458250000e-01,  5.8652700000e-01,  1.9735910000e-01,
                1.0010200000e-02,  1.3160000000e-03,  -2.1010000000e-04,
                1.1090000000e-04,  -3.8000000000e-05},
      doubles_t{9.5636000000e+06, 1.4321000000e+06, 3.2591000000e+05,
                9.2312000000e+04, 3.0116000000e+04, 1.0872000000e+04,
                4.2401000000e+03, 1.7584000000e+03, 7.6659000000e+02,
                3.4843000000e+02, 1.6403000000e+02, 7.9142000000e+01,
                3.5524000000e+01, 1.7305000000e+01, 8.3784000000e+00,
                3.7405000000e+00, 1.6890000000e+00, 5.0927000000e-01,
                2.5520000000e-01, 1.0651000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{8.0000000000e-07,  6.0000000000e-06,  3.1700000000e-05,
                1.3370000000e-04,  4.8830000000e-04,  1.5821000000e-03,
                4.6919000000e-03,  1.2509800000e-02,  3.0038100000e-02,
                5.9727100000e-02,  8.8469600000e-02,  3.6392000000e-02,
                -2.2353290000e-01, -5.1224620000e-01, -1.0842240000e-01,
                6.9363720000e-01,  5.5587110000e-01,  4.0980600000e-02,
                -1.1383200000e-02, 2.4256000000e-03},
      doubles_t{9.5636000000e+06, 1.4321000000e+06, 3.2591000000e+05,
                9.2312000000e+04, 3.0116000000e+04, 1.0872000000e+04,
                4.2401000000e+03, 1.7584000000e+03, 7.6659000000e+02,
                3.4843000000e+02, 1.6403000000e+02, 7.9142000000e+01,
                3.5524000000e+01, 1.7305000000e+01, 8.3784000000e+00,
                3.7405000000e+00, 1.6890000000e+00, 5.0927000000e-01,
                2.5520000000e-01, 1.0651000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0927000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.0000000000e-07, -1.8000000000e-06, -9.3000000000e-06,
                -3.9100000000e-05, -1.4280000000e-04, -4.6270000000e-04,
                -1.3722000000e-03, -3.6628000000e-03, -8.8061000000e-03,
                -1.7586700000e-02, -2.6207400000e-02, -1.0996400000e-02,
                6.9569700000e-02,  1.6839470000e-01,  3.4616000000e-02,
                -2.9787020000e-01, -4.3225690000e-01, 2.6316110000e-01,
                6.7572170000e-01,  2.9564950000e-01},
      doubles_t{9.5636000000e+06, 1.4321000000e+06, 3.2591000000e+05,
                9.2312000000e+04, 3.0116000000e+04, 1.0872000000e+04,
                4.2401000000e+03, 1.7584000000e+03, 7.6659000000e+02,
                3.4843000000e+02, 1.6403000000e+02, 7.9142000000e+01,
                3.5524000000e+01, 1.7305000000e+01, 8.3784000000e+00,
                3.7405000000e+00, 1.6890000000e+00, 5.0927000000e-01,
                2.5520000000e-01, 1.0651000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0651000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.9201000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{4.5050000000e-04, 3.9049000000e-03, 2.1090100000e-02,
                           8.1292000000e-02, 2.2178410000e-01, 3.9072700000e-01,
                           3.5597140000e-01, 1.0732720000e-01, 3.6985000000e-03,
                           1.8032000000e-03, -4.5010000000e-04,
                           2.2080000000e-04, -7.2200000000e-05},
                 doubles_t{8.0043000000e+03, 1.8969000000e+03, 6.1471000000e+02,
                           2.3350000000e+02, 9.7856000000e+01, 4.3514000000e+01,
                           2.0063000000e+01, 9.1127000000e+00, 4.1063000000e+00,
                           1.7949000000e+00, 6.2432000000e-01, 2.4615000000e-01,
                           8.8917000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.7830000000e-04, -1.5554000000e-03, -8.4727000000e-03,
                -3.3624500000e-02, -9.5826700000e-02, -1.8139070000e-01,
                -1.5031520000e-01, 1.9482630000e-01, 5.4155540000e-01,
                3.8372990000e-01, 4.4423200000e-02, -5.0132000000e-03,
                1.6879000000e-03},
      doubles_t{8.0043000000e+03, 1.8969000000e+03, 6.1471000000e+02,
                2.3350000000e+02, 9.7856000000e+01, 4.3514000000e+01,
                2.0063000000e+01, 9.1127000000e+00, 4.1063000000e+00,
                1.7949000000e+00, 6.2432000000e-01, 2.4615000000e-01,
                8.8917000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{6.2432000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.3000000000e-05, 3.7700000000e-04, 2.0465000000e-03,
                8.1899000000e-03, 2.3335600000e-02, 4.4981300000e-02,
                3.5747500000e-02, -5.8686600000e-02, -1.7095730000e-01,
                -1.2935830000e-01, 2.6470630000e-01, 5.7780690000e-01,
                3.2755080000e-01},
      doubles_t{8.0043000000e+03, 1.8969000000e+03, 6.1471000000e+02,
                2.3350000000e+02, 9.7856000000e+01, 4.3514000000e+01,
                2.0063000000e+01, 9.1127000000e+00, 4.1063000000e+00,
                1.7949000000e+00, 6.2432000000e-01, 2.4615000000e-01,
                8.8917000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.8917000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.0251000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.5655000000e-03, 1.3326200000e-02, 6.0152700000e-02,
                           1.7402930000e-01, 3.1956900000e-01, 3.8120290000e-01,
                           2.7460860000e-01, 7.8255100000e-02},
                 doubles_t{3.6185000000e+02, 1.0855000000e+02, 4.1433000000e+01,
                           1.7579000000e+01, 7.8627000000e+00, 3.5180000000e+00,
                           1.5348000000e+00, 6.0813000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{6.0813000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.2200000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{8.3700000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{4.6200000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8800000000e-01}));
    return abs_t(name, 34, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pvtz_34

} // namespace chemcache
