/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pvtz.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pvtz_32() {
    // Basis Set name and origin point
    std::string name("aug-cc-pvtz");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{7.4000000000e-06,  5.7400000000e-05,  3.0190000000e-04,
                1.2733000000e-03,  4.6123000000e-03,  1.4821400000e-02,
                4.2553600000e-02,  1.0730550000e-01,  2.2451780000e-01,
                3.4531310000e-01,  3.0452610000e-01,  9.9067000000e-02,
                4.1317000000e-03,  1.0347000000e-03,  -4.8560000000e-04,
                1.8050000000e-04,  -9.1200000000e-05, 3.7800000000e-05,
                -2.6600000000e-05, 7.2000000000e-06},
      doubles_t{7.4479670000e+06, 1.1153180000e+06, 2.5384260000e+05,
                7.1915290000e+04, 2.3470180000e+04, 8.4774920000e+03,
                3.3083910000e+03, 1.3726050000e+03, 5.9822010000e+02,
                2.7138600000e+02, 1.2697800000e+02, 6.0222070000e+01,
                2.8018580000e+01, 1.3517520000e+01, 6.3094060000e+00,
                2.9045340000e+00, 1.2875560000e+00, 3.3655200000e-01,
                1.6773200000e-01, 7.1069000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.3000000000e-06, -1.7900000000e-05, -9.4000000000e-05,
                -3.9640000000e-04, -1.4425000000e-03, -4.6675000000e-03,
                -1.3715300000e-02, -3.6179700000e-02, -8.4167900000e-02,
                -1.5887670000e-01, -2.0338070000e-01, -2.5141000000e-02,
                4.5751520000e-01,  5.5719390000e-01,  1.3970550000e-01,
                2.2645000000e-03,  2.0927000000e-03,  -4.7390000000e-04,
                3.2810000000e-04,  -9.1600000000e-05},
      doubles_t{7.4479670000e+06, 1.1153180000e+06, 2.5384260000e+05,
                7.1915290000e+04, 2.3470180000e+04, 8.4774920000e+03,
                3.3083910000e+03, 1.3726050000e+03, 5.9822010000e+02,
                2.7138600000e+02, 1.2697800000e+02, 6.0222070000e+01,
                2.8018580000e+01, 1.3517520000e+01, 6.3094060000e+00,
                2.9045340000e+00, 1.2875560000e+00, 3.3655200000e-01,
                1.6773200000e-01, 7.1069000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{9.0000000000e-07,  6.9000000000e-06,  3.6200000000e-05,
                1.5280000000e-04,  5.5630000000e-04,  1.8018000000e-03,
                5.3085000000e-03,  1.4087700000e-02,  3.3201300000e-02,
                6.4462100000e-02,  8.6954000000e-02,  1.1874500000e-02,
                -2.7245340000e-01, -5.0014520000e-01, 1.0855400000e-02,
                7.2164690000e-01,  4.8052130000e-01,  2.7773800000e-02,
                -1.0229700000e-02, 2.2444000000e-03},
      doubles_t{7.4479670000e+06, 1.1153180000e+06, 2.5384260000e+05,
                7.1915290000e+04, 2.3470180000e+04, 8.4774920000e+03,
                3.3083910000e+03, 1.3726050000e+03, 5.9822010000e+02,
                2.7138600000e+02, 1.2697800000e+02, 6.0222070000e+01,
                2.8018580000e+01, 1.3517520000e+01, 6.3094060000e+00,
                2.9045340000e+00, 1.2875560000e+00, 3.3655200000e-01,
                1.6773200000e-01, 7.1069000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3655200000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.0000000000e-07, -1.8000000000e-06, -9.3000000000e-06,
                -3.9200000000e-05, -1.4260000000e-04, -4.6210000000e-04,
                -1.3614000000e-03, -3.6175000000e-03, -8.5359000000e-03,
                -1.6650600000e-02, -2.2591100000e-02, -3.2147000000e-03,
                7.4499800000e-02,  1.4403330000e-01,  -8.0815000000e-03,
                -2.7041630000e-01, -3.4016070000e-01, 2.9220840000e-01,
                6.1906570000e-01,  2.8632760000e-01},
      doubles_t{7.4479670000e+06, 1.1153180000e+06, 2.5384260000e+05,
                7.1915290000e+04, 2.3470180000e+04, 8.4774920000e+03,
                3.3083910000e+03, 1.3726050000e+03, 5.9822010000e+02,
                2.7138600000e+02, 1.2697800000e+02, 6.0222070000e+01,
                2.8018580000e+01, 1.3517520000e+01, 6.3094060000e+00,
                2.9045340000e+00, 1.2875560000e+00, 3.3655200000e-01,
                1.6773200000e-01, 7.1069000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{7.1069000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7370000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{4.5690000000e-04, 3.9562000000e-03, 2.1314300000e-02,
                           8.1871500000e-02, 2.2237320000e-01, 3.9056590000e-01,
                           3.5604150000e-01, 1.0703120000e-01, 3.6941000000e-03,
                           1.9219000000e-03, -4.1640000000e-04,
                           1.9170000000e-04, -6.1200000000e-05},
                 doubles_t{6.9795980000e+03, 1.6541650000e+03, 5.3602860000e+02,
                           2.0353710000e+02, 8.5237530000e+01, 3.7841960000e+01,
                           1.7406510000e+01, 7.8814920000e+00, 3.5332130000e+00,
                           1.5214730000e+00, 5.6270400000e-01, 1.9909300000e-01,
                           6.7031000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.7560000000e-04, -1.5305000000e-03, -8.3145000000e-03,
                -3.2871800000e-02, -9.3166100000e-02, -1.7555420000e-01,
                -1.4679120000e-01, 1.8629340000e-01, 5.2648620000e-01,
                3.9708590000e-01, 5.7147500000e-02, -3.3478000000e-03,
                1.2738000000e-03},
      doubles_t{6.9795980000e+03, 1.6541650000e+03, 5.3602860000e+02,
                2.0353710000e+02, 8.5237530000e+01, 3.7841960000e+01,
                1.7406510000e+01, 7.8814920000e+00, 3.5332130000e+00,
                1.5214730000e+00, 5.6270400000e-01, 1.9909300000e-01,
                6.7031000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.6270400000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{3.4800000000e-05, 3.0140000000e-04, 1.6487000000e-03,
                6.4982000000e-03, 1.8638300000e-02, 3.5061300000e-02,
                2.9589200000e-02, -4.7245800000e-02, -1.2498470000e-01,
                -1.2108010000e-01, 1.3686690000e-01, 5.7547300000e-01,
                4.4426890000e-01},
      doubles_t{6.9795980000e+03, 1.6541650000e+03, 5.3602860000e+02,
                2.0353710000e+02, 8.5237530000e+01, 3.7841960000e+01,
                1.7406510000e+01, 7.8814920000e+00, 3.5332130000e+00,
                1.5214730000e+00, 5.6270400000e-01, 1.9909300000e-01,
                6.7031000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{6.7031000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.1368000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{1.8275000000e-03, 1.5154500000e-02, 6.6046000000e-02,
                           1.8394700000e-01, 3.2278720000e-01, 3.7294590000e-01,
                           2.7517300000e-01, 8.8523400000e-02},
                 doubles_t{2.8223910000e+02, 8.4549960000e+01, 3.2073660000e+01,
                           1.3497500000e+01, 5.9585500000e+00, 2.6107880000e+00,
                           1.1039870000e+00, 4.2404900000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.2404900000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5200000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.2800000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.4580000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3230000000e-01}));
    return abs_t(name, 32, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pvtz_32

} // namespace chemcache
