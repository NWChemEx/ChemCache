/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pv_oparen_d_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pv_oparen_d_plus_d_cparen_z_21() {
    // Basis Set name and origin point
    std::string name("aug-cc-pv(d+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{8.1472210000e-06,  6.3347880000e-05, 3.3303840000e-04,
                1.4040550000e-03,  5.0817250000e-03, 1.6269260000e-02,
                4.6245770000e-02,  1.1372230000e-01, 2.2576360000e-01,
                3.1067000000e-01,  2.1919060000e-01, 7.2158790000e-02,
                1.1870300000e-01,  1.2205320000e-01, 2.1367950000e-02,
                -5.3572460000e-04, 2.4357740000e-04, -8.7966170000e-05,
                7.8782460000e-05,  -1.6371550000e-05},
      doubles_t{2.7152780000e+06, 4.0659840000e+05, 9.2530040000e+04,
                2.6207920000e+04, 8.5494290000e+03, 3.0859750000e+03,
                1.2031720000e+03, 4.9848690000e+02, 2.1673600000e+02,
                9.7874760000e+01, 4.5204330000e+01, 2.0211870000e+01,
                9.5747510000e+00, 4.5403460000e+00, 1.9956870000e+00,
                9.4221500000e-01, 4.1784500000e-01, 9.5761000000e-02,
                5.1351000000e-02, 2.3878000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-4.7221090000e-06, -3.6718290000e-05, -1.9308830000e-04,
                -8.1468700000e-04, -2.9555260000e-03, -9.5200350000e-03,
                -2.7468580000e-02, -6.9915280000e-02, -1.4992510000e-01,
                -2.4591530000e-01, -2.4012930000e-01, 3.5679870000e-02,
                4.9150230000e-01,  4.9113810000e-01,  9.1206330000e-02,
                -5.3567230000e-03, 8.8128360000e-04,  -7.6055360000e-04,
                6.3401160000e-04,  -1.5561630000e-04},
      doubles_t{2.7152780000e+06, 4.0659840000e+05, 9.2530040000e+04,
                2.6207920000e+04, 8.5494290000e+03, 3.0859750000e+03,
                1.2031720000e+03, 4.9848690000e+02, 2.1673600000e+02,
                9.7874760000e+01, 4.5204330000e+01, 2.0211870000e+01,
                9.5747510000e+00, 4.5403460000e+00, 1.9956870000e+00,
                9.4221500000e-01, 4.1784500000e-01, 9.5761000000e-02,
                5.1351000000e-02, 2.3878000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{9.1399050000e-07,  7.1085130000e-06,  3.7381260000e-05,
                1.5788280000e-04,  5.7376860000e-04,  1.8592440000e-03,
                5.4331820000e-03,  1.4253870000e-02,  3.2461440000e-02,
                6.0034540000e-02,  6.9161050000e-02,  -2.1130840000e-02,
                -2.6668320000e-01, -4.3675910000e-01, 6.4982430000e-02,
                7.0095990000e-01,  4.5155620000e-01,  3.0119100000e-02,
                -1.3294800000e-02, 4.6336790000e-03},
      doubles_t{2.7152780000e+06, 4.0659840000e+05, 9.2530040000e+04,
                2.6207920000e+04, 8.5494290000e+03, 3.0859750000e+03,
                1.2031720000e+03, 4.9848690000e+02, 2.1673600000e+02,
                9.7874760000e+01, 4.5204330000e+01, 2.0211870000e+01,
                9.5747510000e+00, 4.5403460000e+00, 1.9956870000e+00,
                9.4221500000e-01, 4.1784500000e-01, 9.5761000000e-02,
                5.1351000000e-02, 2.3878000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.2019510000e-07, -1.7114190000e-06, -9.0084690000e-06,
                -3.7999970000e-05, -1.3832270000e-04, -4.4736920000e-04,
                -1.3106910000e-03, -3.4298600000e-03, -7.8475790000e-03,
                -1.4471890000e-02, -1.6906690000e-02, 5.3961150000e-03,
                6.6710620000e-02,  1.1783560000e-01,  -2.7381340000e-02,
                -2.2601490000e-01, -3.0735390000e-01, 2.5440540000e-01,
                5.9815900000e-01,  3.1152020000e-01},
      doubles_t{2.7152780000e+06, 4.0659840000e+05, 9.2530040000e+04,
                2.6207920000e+04, 8.5494290000e+03, 3.0859750000e+03,
                1.2031720000e+03, 4.9848690000e+02, 2.1673600000e+02,
                9.7874760000e+01, 4.5204330000e+01, 2.0211870000e+01,
                9.5747510000e+00, 4.5403460000e+00, 1.9956870000e+00,
                9.4221500000e-01, 4.1784500000e-01, 9.5761000000e-02,
                5.1351000000e-02, 2.3878000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-3.7572380000e-07, -2.9819070000e-06, -1.5225860000e-05,
                -6.6846860000e-05, -2.3131290000e-04, -7.9597290000e-04,
                -2.1619610000e-03, -6.2064590000e-03, -1.2619050000e-02,
                -2.7394590000e-02, -2.3365160000e-02, -5.7346270000e-03,
                1.5360250000e-01,  1.4471000000e-01,  9.3596990000e-02,
                -8.6877300000e-01, 2.1145970000e-02,  2.2754980000e+00,
                -1.1907700000e+00, -7.6742570000e-01},
      doubles_t{2.7152780000e+06, 4.0659840000e+05, 9.2530040000e+04,
                2.6207920000e+04, 8.5494290000e+03, 3.0859750000e+03,
                1.2031720000e+03, 4.9848690000e+02, 2.1673600000e+02,
                9.7874760000e+01, 4.5204330000e+01, 2.0211870000e+01,
                9.5747510000e+00, 4.5403460000e+00, 1.9956870000e+00,
                9.4221500000e-01, 4.1784500000e-01, 9.5761000000e-02,
                5.1351000000e-02, 2.3878000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3878000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1100000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.5000000000e-05, 4.0100000000e-04, 2.3020000000e-03,
                1.0037000000e-02, 3.4954000000e-02, 9.7909000000e-02,
                2.1068000000e-01, 3.3009300000e-01, 3.3102700000e-01,
                1.5796000000e-01, 2.2099000000e-02, -1.6050000000e-03,
                -1.3260000000e-03, -2.8000000000e-04, 3.4000000000e-05,
                -1.3000000000e-05},
      doubles_t{1.0592190000e+04, 2.5075330000e+03, 8.1445710000e+02,
                3.1151950000e+02, 1.3196170000e+02, 5.9987180000e+01,
                2.8662500000e+01, 1.4108510000e+01, 7.1037060000e+00,
                3.6092000000e+00, 1.7760700000e+00, 8.5476000000e-01,
                4.0223900000e-01, 1.5466500000e-01, 6.4945000000e-02,
                2.6359000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.5000000000e-05, -1.3100000000e-04, -7.5700000000e-04,
                -3.3180000000e-03, -1.1706000000e-02, -3.3604000000e-02,
                -7.4879000000e-02, -1.2254800000e-01, -1.3027600000e-01,
                1.4596000000e-02, 3.0918400000e-01, 4.6299800000e-01,
                3.0495700000e-01, 5.0878000000e-02, -4.4930000000e-03,
                1.8320000000e-03},
      doubles_t{1.0592190000e+04, 2.5075330000e+03, 8.1445710000e+02,
                3.1151950000e+02, 1.3196170000e+02, 5.9987180000e+01,
                2.8662500000e+01, 1.4108510000e+01, 7.1037060000e+00,
                3.6092000000e+00, 1.7760700000e+00, 8.5476000000e-01,
                4.0223900000e-01, 1.5466500000e-01, 6.4945000000e-02,
                2.6359000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{4.0000000000e-06, 3.9000000000e-05, 2.2100000000e-04,
                9.8400000000e-04, 3.4230000000e-03, 9.9930000000e-03,
                2.1916000000e-02, 3.7008000000e-02, 3.7794000000e-02,
                -4.3790000000e-03, -1.1016400000e-01, -1.6101700000e-01,
                -1.8248200000e-01, 3.8861100000e-01, 6.9110000000e-01,
                7.9604000000e-02},
      doubles_t{1.0592190000e+04, 2.5075330000e+03, 8.1445710000e+02,
                3.1151950000e+02, 1.3196170000e+02, 5.9987180000e+01,
                2.8662500000e+01, 1.4108510000e+01, 7.1037060000e+00,
                3.6092000000e+00, 1.7760700000e+00, 8.5476000000e-01,
                4.0223900000e-01, 1.5466500000e-01, 6.4945000000e-02,
                2.6359000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-4.0000000000e-06, -3.2000000000e-05, -1.8500000000e-04,
                -8.0800000000e-04, -2.8700000000e-03, -8.2070000000e-03,
                -1.8473000000e-02, -3.0101000000e-02, -3.2943000000e-02,
                7.9580000000e-03, 8.7993000000e-02, 1.5237700000e-01,
                9.7170000000e-02, -2.5693800000e-01, -5.8781500000e-01,
                -3.0542100000e-01},
      doubles_t{1.0592190000e+04, 2.5075330000e+03, 8.1445710000e+02,
                3.1151950000e+02, 1.3196170000e+02, 5.9987180000e+01,
                2.8662500000e+01, 1.4108510000e+01, 7.1037060000e+00,
                3.6092000000e+00, 1.7760700000e+00, 8.5476000000e-01,
                4.0223900000e-01, 1.5466500000e-01, 6.4945000000e-02,
                2.6359000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.6359000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0660000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 2,
                 doubles_t{4.2660000000e-03, 2.7708000000e-02, 1.0000100000e-01,
                           2.3158100000e-01, 3.4603300000e-01, 3.7337400000e-01,
                           2.6428800000e-01, 6.3667000000e-02},
                 doubles_t{5.0513800000e+01, 1.4740500000e+01, 5.1950000000e+00,
                           2.0284600000e+00, 8.0408600000e-01, 3.0768900000e-01,
                           1.1139200000e-01, 3.7352000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 2,
      doubles_t{-4.3890000000e-03, -2.8363000000e-02, -1.0513700000e-01,
                -2.3485400000e-01, -3.2460900000e-01, -6.4289000000e-02,
                6.0174900000e-01, 3.9030000000e-01},
      doubles_t{5.0513800000e+01, 1.4740500000e+01, 5.1950000000e+00,
                2.0284600000e+00, 8.0408600000e-01, 3.0768900000e-01,
                1.1139200000e-01, 3.7352000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.7352000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2440000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 3, doubles_t{3.6174500000e-01, 8.2186800000e-01},
                 doubles_t{7.1260000000e-01, 1.6360000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{4.0630000000e-02}));
    return abs_t(name, 21, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pv_oparen_d_plus_d_cparen_z_21

} // namespace chemcache
