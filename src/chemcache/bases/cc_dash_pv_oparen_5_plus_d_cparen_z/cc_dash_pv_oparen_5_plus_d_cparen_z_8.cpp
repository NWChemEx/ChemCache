/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pv_oparen_5_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pv_oparen_5_plus_d_cparen_z_8() {
    // Basis Set name and origin point
    std::string name("cc-pv(5+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{2.6000000000e-05, 2.0500000000e-04, 1.0760000000e-03,
                           4.5220000000e-03, 1.6108000000e-02, 4.9085000000e-02,
                           1.2485700000e-01, 2.5168600000e-01, 3.6242000000e-01,
                           2.7905100000e-01, 6.3552000000e-02, 1.0630000000e-03,
                           1.1440000000e-03, -4.0000000000e-05},
                 doubles_t{1.6420000000e+05, 2.4590000000e+04, 5.5920000000e+03,
                           1.5820000000e+03, 5.1610000000e+02, 1.8720000000e+02,
                           7.3930000000e+01, 3.1220000000e+01, 1.3810000000e+01,
                           6.2560000000e+00, 2.7760000000e+00, 1.1380000000e+00,
                           4.6000000000e-01, 1.8290000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7760000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1380000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-6.0000000000e-06, -4.6000000000e-05, -2.4400000000e-04,
                -1.0310000000e-03, -3.6880000000e-03, -1.1514000000e-02,
                -3.0435000000e-02, -6.8147000000e-02, -1.2036800000e-01,
                -1.4826000000e-01, 9.9050000000e-03, 3.8428600000e-01,
                5.3680500000e-01, 2.0268700000e-01},
      doubles_t{1.6420000000e+05, 2.4590000000e+04, 5.5920000000e+03,
                1.5820000000e+03, 5.1610000000e+02, 1.8720000000e+02,
                7.3930000000e+01, 3.1220000000e+01, 1.3810000000e+01,
                6.2560000000e+00, 2.7760000000e+00, 1.1380000000e+00,
                4.6000000000e-01, 1.8290000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.6000000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8290000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.0940000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.4710000000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{9.1800000000e-04, 7.3880000000e-03, 3.4958000000e-02,
                           1.1543100000e-01, 2.5680300000e-01, 3.7393800000e-01,
                           3.4344700000e-01, 1.2970600000e-01},
                 doubles_t{1.9550000000e+02, 4.6160000000e+01, 1.4580000000e+01,
                           5.2960000000e+00, 2.0940000000e+00, 8.4710000000e-01,
                           3.3680000000e-01, 1.2850000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3680000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2850000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.8790000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3070000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{9.0500000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.5500000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{4.0160000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5540000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{6.0100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3500000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1890000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3190000000e+00}));
    return abs_t(name, 8, r0, shells.begin(), shells.end());
} // cc_dash_pv_oparen_5_plus_d_cparen_z_8

} // namespace chemcache
