/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pv_oparen_5_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pv_oparen_5_plus_d_cparen_z_3() {
    // Basis Set name and origin point
    std::string name("cc-pv(5+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{1.8000000000e-05, 1.4100000000e-04, 7.3900000000e-04,
                           3.1070000000e-03, 1.1135000000e-02, 3.4670000000e-02,
                           9.2171000000e-02, 1.9957600000e-01, 3.2883600000e-01,
                           3.4597500000e-01, 1.4276100000e-01, 5.3190000000e-03,
                           -2.1010000000e-03, 8.1500000000e-04},
                 doubles_t{2.9493000000e+04, 4.4171010000e+03, 1.0052230000e+03,
                           2.8470090000e+02, 9.2865430000e+01, 3.3511790000e+01,
                           1.3041800000e+01, 5.3575360000e+00, 2.2793380000e+00,
                           9.9399000000e-01, 4.3347100000e-01, 9.5566000000e-02,
                           4.4657000000e-02, 2.0633000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.3347100000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{9.5566000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{4.4657000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-3.0000000000e-06, -2.2000000000e-05, -1.1500000000e-04,
                -4.8700000000e-04, -1.7460000000e-03, -5.5200000000e-03,
                -1.4928000000e-02, -3.4206000000e-02, -6.2155000000e-02,
                -9.5902000000e-02, -1.0397200000e-01, 3.0715100000e-01,
                5.7902800000e-01, 2.2323100000e-01},
      doubles_t{2.9493000000e+04, 4.4171010000e+03, 1.0052230000e+03,
                2.8470090000e+02, 9.2865430000e+01, 3.3511790000e+01,
                1.3041800000e+01, 5.3575360000e+00, 2.2793380000e+00,
                9.9399000000e-01, 4.3347100000e-01, 9.5566000000e-02,
                4.4657000000e-02, 2.0633000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.0633000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.7615100000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{7.2675000000e-02}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{5.4000000000e-04, 3.8650000000e-03, 1.5171000000e-02,
                           4.9204000000e-02, 1.5466100000e-01, 3.6009500000e-01,
                           4.4185200000e-01, 1.5600000000e-01},
                 doubles_t{1.9663500000e+01, 4.6231100000e+00, 1.4137800000e+00,
                           4.7372100000e-01, 1.7615100000e-01, 7.2675000000e-02,
                           3.2141000000e-02, 1.4556000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{3.2141000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4556000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.3100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.4810000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1590000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.4200000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9200000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.6410000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{9.2200000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9710000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5000000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9490000000e-01}));
    return abs_t(name, 3, r0, shells.begin(), shells.end());
} // cc_dash_pv_oparen_5_plus_d_cparen_z_3

} // namespace chemcache
