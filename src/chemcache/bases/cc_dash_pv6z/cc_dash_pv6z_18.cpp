/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pv6z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pv6z_18() {
    // Basis Set name and origin point
    std::string name("cc-pv6z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.3000000000e-06,  1.0400000000e-05,  5.4900000000e-05,
                2.2960000000e-04,  8.1030000000e-04,  2.4853000000e-03,
                6.8369000000e-03,  1.7619900000e-02,  4.2875200000e-02,
                9.5485300000e-02,  1.8506400000e-01,  2.8904200000e-01,
                3.1016600000e-01,  1.7218300000e-01,  2.8522700000e-02,
                -5.7570000000e-04, 1.1812000000e-03,  -4.8050000000e-04,
                1.8880000000e-04,  -9.7300000000e-05, 1.7400000000e-05},
      doubles_t{9.1490000000e+06, 1.3700000000e+06, 3.1190000000e+05,
                8.8650000000e+04, 2.9330000000e+04, 1.0930000000e+04,
                4.4800000000e+03, 1.9620000000e+03, 8.9410000000e+02,
                4.1960000000e+02, 2.0230000000e+02, 9.9840000000e+01,
                5.0070000000e+01, 2.5140000000e+01, 1.1810000000e+01,
                5.8820000000e+00, 2.9390000000e+00, 1.4050000000e+00,
                6.9630000000e-01, 3.1880000000e-01, 1.4100000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-4.0000000000e-07, -3.0000000000e-06, -1.5600000000e-05,
                -6.5200000000e-05, -2.3040000000e-04, -7.0750000000e-04,
                -1.9573000000e-03, -5.0856000000e-03, -1.2652800000e-02,
                -2.9306500000e-02, -6.1771200000e-02, -1.1254100000e-01,
                -1.6229300000e-01, -1.1841200000e-01, 1.4614800000e-01,
                4.9775200000e-01,  4.3424000000e-01,  8.9074500000e-02,
                5.3810000000e-04,  2.0404000000e-03,  -2.8000000000e-05},
      doubles_t{9.1490000000e+06, 1.3700000000e+06, 3.1190000000e+05,
                8.8650000000e+04, 2.9330000000e+04, 1.0930000000e+04,
                4.4800000000e+03, 1.9620000000e+03, 8.9410000000e+02,
                4.1960000000e+02, 2.0230000000e+02, 9.9840000000e+01,
                5.0070000000e+01, 2.5140000000e+01, 1.1810000000e+01,
                5.8820000000e+00, 2.9390000000e+00, 1.4050000000e+00,
                6.9630000000e-01, 3.1880000000e-01, 1.4100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9390000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4050000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{6.9630000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.0000000000e-07,  9.0000000000e-07,  4.9000000000e-06,
                2.0400000000e-05,  7.2000000000e-05,  2.2100000000e-04,
                6.1250000000e-04,  1.5908000000e-03,  3.9722000000e-03,
                9.2204000000e-03,  1.9636700000e-02,  3.6257000000e-02,
                5.4172500000e-02,  4.0999600000e-02,  -5.5174400000e-02,
                -2.3875400000e-01, -3.4526400000e-01, -1.2238400000e-02,
                4.9973700000e-01,  5.5688900000e-01,  1.5554200000e-01},
      doubles_t{9.1490000000e+06, 1.3700000000e+06, 3.1190000000e+05,
                8.8650000000e+04, 2.9330000000e+04, 1.0930000000e+04,
                4.4800000000e+03, 1.9620000000e+03, 8.9410000000e+02,
                4.1960000000e+02, 2.0230000000e+02, 9.9840000000e+01,
                5.0070000000e+01, 2.5140000000e+01, 1.1810000000e+01,
                5.8820000000e+00, 2.9390000000e+00, 1.4050000000e+00,
                6.9630000000e-01, 3.1880000000e-01, 1.4100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.1880000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4100000000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{5.0200000000e-05, 4.4540000000e-04, 2.5480000000e-03,
                           1.1015500000e-02, 3.7849000000e-02, 1.0435500000e-01,
                           2.1933500000e-01, 3.3461500000e-01, 3.2677100000e-01,
                           1.4815300000e-01, 1.9258600000e-02, 5.5190000000e-04,
                           1.7690000000e-04, -1.6900000000e-05},
                 doubles_t{7.0500000000e+03, 1.6690000000e+03, 5.4210000000e+02,
                           2.0710000000e+02, 8.7520000000e+01, 3.9610000000e+01,
                           1.8780000000e+01, 9.1300000000e+00, 4.5160000000e+00,
                           2.2450000000e+00, 1.0650000000e+00, 4.8850000000e-01,
                           2.1660000000e-01, 9.2550000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.2450000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0650000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{4.8850000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-1.4000000000e-05, -1.2430000000e-04, -7.1470000000e-04,
                -3.0968000000e-03, -1.0796100000e-02, -3.0353600000e-02,
                -6.5978500000e-02, -1.0387700000e-01, -1.0995600000e-01,
                1.3324800000e-02, 2.7428600000e-01, 4.3493600000e-01,
                3.4097700000e-01, 9.5068400000e-02},
      doubles_t{7.0500000000e+03, 1.6690000000e+03, 5.4210000000e+02,
                2.0710000000e+02, 8.7520000000e+01, 3.9610000000e+01,
                1.8780000000e+01, 9.1300000000e+00, 4.5160000000e+00,
                2.2450000000e+00, 1.0650000000e+00, 4.8850000000e-01,
                2.1660000000e-01, 9.2550000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.1660000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{9.2550000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{7.6327000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.2876000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4160000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{6.0990000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.6270000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.0582000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5292000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{7.6470000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.8240000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8450000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{9.6570000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{5.0550000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8743000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{8.8710000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 6, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5066000000e+00}));
    return abs_t(name, 18, r0, shells.begin(), shells.end());
} // cc_dash_pv6z_18

} // namespace chemcache
