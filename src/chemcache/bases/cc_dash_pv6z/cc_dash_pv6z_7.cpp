/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pv6z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pv6z_7() {
    // Basis Set name and origin point
    std::string name("cc-pv6z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(
      make_shell(pure_t::pure, 0,
                 doubles_t{5.5900000000e-06, 4.3510000000e-05, 2.2893000000e-04,
                           9.6502000000e-04, 3.5021900000e-03, 1.1292120000e-02,
                           3.2612830000e-02, 8.3297270000e-02, 1.7998570000e-01,
                           3.0500350000e-01, 3.4115930000e-01, 1.7748270000e-01,
                           1.9884090000e-02, -1.2466300000e-03,
                           1.0401100000e-03, -1.2659000000e-04},
                 doubles_t{4.3230000000e+05, 6.4700000000e+04, 1.4720000000e+04,
                           4.1700000000e+03, 1.3610000000e+03, 4.9120000000e+02,
                           1.9160000000e+02, 7.9410000000e+01, 3.4530000000e+01,
                           1.5580000000e+01, 7.2320000000e+00, 3.3820000000e+00,
                           1.3690000000e+00, 6.2480000000e-01, 2.7470000000e-01,
                           1.1920000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.3820000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3690000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{6.2480000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.2300000000e-06, -9.5800000000e-06, -5.0510000000e-05,
                -2.1264000000e-04, -7.7534000000e-04, -2.5062400000e-03,
                -7.3652900000e-03, -1.9301670000e-02, -4.4717380000e-02,
                -8.6066470000e-02, -1.3329630000e-01, -1.0596550000e-01,
                1.3466730000e-01, 4.3394010000e-01, 4.5294900000e-01,
                1.3402160000e-01},
      doubles_t{4.3230000000e+05, 6.4700000000e+04, 1.4720000000e+04,
                4.1700000000e+03, 1.3610000000e+03, 4.9120000000e+02,
                1.9160000000e+02, 7.9410000000e+01, 3.4530000000e+01,
                1.5580000000e+01, 7.2320000000e+00, 3.3820000000e+00,
                1.3690000000e+00, 6.2480000000e-01, 2.7470000000e-01,
                1.1920000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7470000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1920000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.1480000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{9.6960000000e-01}));
    shells.emplace_back(
      make_shell(pure_t::pure, 1,
                 doubles_t{1.4841000000e-04, 1.2763400000e-03, 6.7024200000e-03,
                           2.5261700000e-02, 7.5189430000e-02, 1.7401510000e-01,
                           2.9279210000e-01, 3.4826480000e-01, 2.5593650000e-01,
                           6.9479290000e-02},
                 doubles_t{4.1590000000e+02, 9.8610000000e+01, 3.1920000000e+01,
                           1.2000000000e+01, 4.9190000000e+00, 2.1480000000e+00,
                           9.6960000000e-01, 4.3990000000e-01, 1.9780000000e-01,
                           8.6030000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{4.3990000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9780000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.6030000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{6.7170000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.8960000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2490000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{5.3800000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3200000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.8290000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.7950000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{8.4100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.9400000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{3.8560000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{1.7020000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{7.5100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{2.8750000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1700000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 6, doubles_t{1.0000000000e+00},
                                   doubles_t{2.0990000000e+00}));
    return abs_t(name, 7, r0, shells.begin(), shells.end());
} // cc_dash_pv6z_7

} // namespace chemcache
