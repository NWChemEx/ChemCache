/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_oparen_seg_dash_opt_cparen__18() {
    // Basis Set name and origin point
    std::string name("cc-pvdz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.3670000000e-04, 1.8352800000e-03, 9.5285500000e-03,
                3.8628250000e-02, 1.2406631000e-01, 2.9639339000e-01,
                4.2163810000e-01, 2.4135250000e-01, 2.2854430000e-02},
      doubles_t{1.4570000000e+05, 2.1840000000e+04, 4.9720000000e+03,
                1.4080000000e+03, 4.5970000000e+02, 1.6590000000e+02,
                6.4690000000e+01, 2.6440000000e+01, 7.6280000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{5.5000000000e-07, 8.9500000000e-06, -9.3100000000e-06,
                -2.8247900000e-03, -1.4649800000e-02, -8.2123420000e-02,
                -6.6816870000e-02, 5.1910850000e-01, 6.2903561000e-01},
      doubles_t{1.4570000000e+05, 2.1840000000e+04, 4.9720000000e+03,
                4.5970000000e+02, 1.6590000000e+02, 6.4690000000e+01,
                2.6440000000e+01, 7.6280000000e+00, 2.9960000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-2.4000000000e-07, -1.1500000000e-06, -1.0080000000e-05,
                1.2727100000e-03, 4.7140800000e-03, 9.8056800000e-03,
                -9.0153930000e-02, -2.5267721000e-01, 6.5773344000e-01},
      doubles_t{1.4570000000e+05, 2.1840000000e+04, 4.9720000000e+03,
                1.6590000000e+02, 6.4690000000e+01, 2.6440000000e+01,
                7.6280000000e+00, 2.9960000000e+00, 6.5040000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3370000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{5.7055500000e-03, 4.3045620000e-02, 1.7657304000e-01,
                4.0679296000e-01, 4.5236414000e-01, 1.2415454000e-01},
      doubles_t{4.5370000000e+02, 1.0680000000e+02, 3.3730000000e+01,
                1.2130000000e+01, 4.5940000000e+00, 1.6780000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-5.0650000000e-05, -2.3549900000e-03, -9.1738500000e-03,
                -2.4191740000e-02, 1.7700289000e-01, 5.8324515000e-01},
      doubles_t{1.0680000000e+02, 3.3730000000e+01, 1.2130000000e+01,
                4.5940000000e+00, 1.6780000000e+00, 5.9090000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8520000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{7.3800000000e-01}));
    return abs_t(name, 18, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_oparen_seg_dash_opt_cparen__18

} // namespace chemcache
