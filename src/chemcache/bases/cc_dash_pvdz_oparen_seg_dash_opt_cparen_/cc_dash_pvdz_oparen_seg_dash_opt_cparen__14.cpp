/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_oparen_seg_dash_opt_cparen__14() {
    // Basis Set name and origin point
    std::string name("cc-pvdz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.7044000000e-04, 2.0972000000e-03, 1.0850560000e-02,
                4.3675400000e-02, 1.3764321000e-01, 3.1659682000e-01,
                4.1832281000e-01, 2.1006896000e-01, 1.6168020000e-02},
      doubles_t{7.8860000000e+04, 1.1820000000e+04, 2.6920000000e+03,
                7.6340000000e+02, 2.4960000000e+02, 9.0280000000e+01,
                3.5290000000e+01, 1.4510000000e+01, 4.0530000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{5.6000000000e-07, 1.0000000000e-05, -1.4130000000e-05,
                -3.1989500000e-03, -1.5303780000e-02, -8.3813150000e-02,
                -4.5872360000e-02, 5.3318276000e-01, 6.0280876000e-01},
      doubles_t{7.8860000000e+04, 1.1820000000e+04, 2.6920000000e+03,
                2.4960000000e+02, 9.0280000000e+01, 3.5290000000e+01,
                1.4510000000e+01, 4.0530000000e+00, 1.4820000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-6.0000000000e-08, -2.9000000000e-07, -2.5400000000e-06,
                3.2392000000e-04, 1.4224000000e-03, 2.5269200000e-03,
                -3.9433930000e-02, -1.9097057000e-01, 6.3176312000e-01},
      doubles_t{7.8860000000e+04, 1.1820000000e+04, 2.6920000000e+03,
                9.0280000000e+01, 3.5290000000e+01, 1.4510000000e+01,
                4.0530000000e+00, 1.4820000000e+00, 2.5170000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{9.2430000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{3.9265600000e-03, 2.9872740000e-02, 1.2724929000e-01,
                3.2091744000e-01, 4.5615915000e-01, 2.6714434000e-01},
      doubles_t{3.1590000000e+02, 7.4420000000e+01, 2.3480000000e+01,
                8.4880000000e+00, 3.2170000000e+00, 1.2290000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.2839000000e-04, -1.0183800000e-03, 6.9854000000e-04,
                -1.9941330000e-02, 3.8746770000e-02, 5.1438489000e-01},
      doubles_t{7.4420000000e+01, 2.3480000000e+01, 8.4880000000e+00,
                3.2170000000e+00, 1.2290000000e+00, 2.9640000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.7680000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7500000000e-01}));
    return abs_t(name, 14, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_oparen_seg_dash_opt_cparen__14

} // namespace chemcache
