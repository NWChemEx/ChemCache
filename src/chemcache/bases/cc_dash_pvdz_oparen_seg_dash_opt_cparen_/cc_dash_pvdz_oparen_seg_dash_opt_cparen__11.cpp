/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_oparen_seg_dash_opt_cparen__11() {
    // Basis Set name and origin point
    std::string name("cc-pvdz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{4.5886000000e-04, 3.5505400000e-03, 1.8261230000e-02,
                7.1665000000e-02, 2.1236896000e-01, 4.1637322000e-01,
                3.7354636000e-01, 6.1965050000e-02, -9.4310700000e-03},
      doubles_t{3.1700000000e+04, 4.7550000000e+03, 1.0820000000e+03,
                3.0640000000e+02, 9.9530000000e+01, 3.5420000000e+01,
                1.3300000000e+01, 4.3920000000e+00, 1.6760000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{4.0100000000e-06, 3.0390000000e-05, 1.0976000000e-04,
                -4.3197500000e-03, -3.2249470000e-02, -9.9418120000e-02,
                1.0163905000e-01, 6.0242177000e-01, 4.4446527000e-01},
      doubles_t{3.1700000000e+04, 4.7550000000e+03, 1.0820000000e+03,
                9.9530000000e+01, 3.5420000000e+01, 1.3300000000e+01,
                4.3920000000e+00, 1.6760000000e+00, 5.8890000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{4.0000000000e-07, 1.9900000000e-06, 1.6310000000e-05,
                -1.6495000000e-03, -2.6215100000e-03, -6.8742000000e-04,
                2.1174470000e-02, -1.0839521000e-01, 6.5862100000e-01},
      doubles_t{3.1700000000e+04, 4.7550000000e+03, 1.0820000000e+03,
                3.5420000000e+01, 1.3300000000e+01, 4.3920000000e+00,
                1.6760000000e+00, 5.8890000000e-01, 5.6400000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3070000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{5.7964100000e-03, 4.1573800000e-02, 1.6288148000e-01,
                3.5938759000e-01, 4.5011908000e-01, 2.2739592000e-01},
      doubles_t{1.3810000000e+02, 3.2240000000e+01, 9.9850000000e+00,
                3.4840000000e+00, 1.2310000000e+00, 4.1770000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{9.8060000000e-05, -4.5329000000e-04, 7.3049000000e-04,
                -7.0515700000e-03, 5.9889800000e-03, 4.3542385000e-01},
      doubles_t{3.2240000000e+01, 9.9850000000e+00, 3.4840000000e+00,
                1.2310000000e+00, 4.1770000000e-01, 6.5130000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.0530000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{9.7300000000e-02}));
    return abs_t(name, 11, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_oparen_seg_dash_opt_cparen__11

} // namespace chemcache
