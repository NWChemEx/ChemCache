/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_oparen_seg_dash_opt_cparen__12() {
    // Basis Set name and origin point
    std::string name("cc-pvdz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{3.4602000000e-04, 2.6807600000e-03, 1.3836690000e-02,
                5.5176700000e-02, 1.6966211000e-01, 3.6471419000e-01,
                4.0690721000e-01, 1.3508866000e-01, 4.6035900000e-03},
      doubles_t{4.7390000000e+04, 7.1080000000e+03, 1.6180000000e+03,
                4.5840000000e+02, 1.4930000000e+02, 5.3590000000e+01,
                2.0700000000e+01, 8.3840000000e+00, 2.5420000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.3600000000e-06, 1.5910000000e-05, 8.6000000000e-06,
                -3.9646000000e-03, -2.0913730000e-02, -9.5825750000e-02,
                7.1991000000e-04, 5.7187043000e-01, 5.4712861000e-01},
      doubles_t{4.7390000000e+04, 7.1080000000e+03, 1.6180000000e+03,
                1.4930000000e+02, 5.3590000000e+01, 2.0700000000e+01,
                8.3840000000e+00, 2.5420000000e+00, 8.7870000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.2000000000e-07, 5.9000000000e-07, 4.8900000000e-06,
                -5.1306000000e-04, -8.4679000000e-04, -1.0856000000e-03,
                -4.2515700000e-03, -1.3285717000e-01, 6.1081639000e-01},
      doubles_t{4.7390000000e+04, 7.1080000000e+03, 1.6180000000e+03,
                5.3590000000e+01, 2.0700000000e+01, 8.3840000000e+00,
                2.5420000000e+00, 8.7870000000e-01, 1.0770000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{3.9990000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{5.3816100000e-03, 3.9239760000e-02, 1.5745580000e-01,
                3.5852671000e-01, 4.5740862000e-01, 2.1562138000e-01},
      doubles_t{1.7990000000e+02, 4.2140000000e+01, 1.3130000000e+01,
                4.6280000000e+00, 1.6700000000e+00, 5.8570000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{1.5457000000e-04, -8.1763000000e-04, 6.2671000000e-04,
                -1.3818940000e-02, 2.2444080000e-02, 5.0315482000e-01},
      doubles_t{4.2140000000e+01, 1.3130000000e+01, 4.6280000000e+00,
                1.6700000000e+00, 5.8570000000e-01, 1.3110000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{4.1120000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8700000000e-01}));
    return abs_t(name, 12, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_oparen_seg_dash_opt_cparen__12

} // namespace chemcache
