/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pvdz_oparen_seg_dash_opt_cparen_.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pvdz_oparen_seg_dash_opt_cparen__15() {
    // Basis Set name and origin point
    std::string name("cc-pvdz(seg-opt)");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{2.5551000000e-04, 1.9819700000e-03, 1.0275960000e-02,
                4.1482300000e-02, 1.3197268000e-01, 3.0860572000e-01,
                4.2033552000e-01, 2.2267116000e-01, 1.8435600000e-02},
      doubles_t{9.4840000000e+04, 1.4220000000e+04, 3.2360000000e+03,
                9.1710000000e+02, 2.9950000000e+02, 1.0810000000e+02,
                4.2180000000e+01, 1.7280000000e+01, 4.8580000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{5.2000000000e-07, 9.3500000000e-06, -1.3220000000e-05,
                -3.0269900000e-03, -1.4859670000e-02, -8.2539680000e-02,
                -5.3883690000e-02, 5.2627550000e-01, 6.1345974000e-01},
      doubles_t{9.4840000000e+04, 1.4220000000e+04, 3.2360000000e+03,
                2.9950000000e+02, 1.0810000000e+02, 4.2180000000e+01,
                1.7280000000e+01, 4.8580000000e+00, 1.8180000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-1.2000000000e-07, -5.6000000000e-07, -4.9000000000e-06,
                6.1387000000e-04, 2.3946900000e-03, 4.5336500000e-03,
                -5.4288460000e-02, -2.1062296000e-01, 6.3413384000e-01},
      doubles_t{9.4840000000e+04, 1.4220000000e+04, 3.2360000000e+03,
                1.0810000000e+02, 4.2180000000e+01, 1.7280000000e+01,
                4.8580000000e+00, 1.8180000000e+00, 3.3720000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2320000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{3.9500500000e-03, 3.0241770000e-02, 1.2959237000e-01,
                3.2759326000e-01, 4.5773868000e-01, 2.5145405000e-01},
      doubles_t{3.7050000000e+02, 8.7330000000e+01, 2.7590000000e+01,
                1.0000000000e+01, 3.8250000000e+00, 1.4940000000e+00}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.3855000000e-04, -1.2315700000e-03, 2.4440000000e-05,
                -2.3970440000e-02, 5.2392130000e-02, 5.4190377000e-01},
      doubles_t{8.7330000000e+01, 2.7590000000e+01, 1.0000000000e+01,
                3.8250000000e+00, 1.4940000000e+00, 3.9210000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1860000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.7300000000e-01}));
    return abs_t(name, 15, r0, shells.begin(), shells.end());
} // cc_dash_pvdz_oparen_seg_dash_opt_cparen__15

} // namespace chemcache
