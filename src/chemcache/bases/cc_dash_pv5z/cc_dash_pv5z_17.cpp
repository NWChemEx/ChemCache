/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "cc_dash_pv5z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t cc_dash_pv5z_17() {
    // Basis Set name and origin point
    std::string name("cc-pv5z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.8135000000e-06,  1.4111800000e-05,  7.4240600000e-05,
                3.1413100000e-04,  1.1464200000e-03,  3.7388800000e-03,
                1.1094600000e-02,  3.0115200000e-02,  7.3914500000e-02,
                1.5825800000e-01,  2.7475300000e-01,  3.3406600000e-01,
                2.1758900000e-01,  4.5727800000e-02,  -1.3473900000e-04,
                1.6393300000e-03,  -5.2221200000e-04, 1.8064800000e-04,
                -9.9931200000e-05, 1.9217500000e-05},
      doubles_t{6.4100000000e+06, 9.5960000000e+05, 2.1830000000e+05,
                6.1810000000e+04, 2.0140000000e+04, 7.2640000000e+03,
                2.8320000000e+03, 1.1750000000e+03, 5.1260000000e+02,
                2.3300000000e+02, 1.0950000000e+02, 5.2860000000e+01,
                2.5840000000e+01, 1.2170000000e+01, 6.0300000000e+00,
                3.0120000000e+00, 1.5110000000e+00, 6.6040000000e-01,
                2.9260000000e-01, 1.2540000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-5.0830300000e-07, -3.9563300000e-06, -2.0809500000e-05,
                -8.8117500000e-05, -3.2174200000e-04, -1.0527700000e-03,
                -3.1418300000e-03, -8.6636300000e-03, -2.1935300000e-02,
                -5.0258400000e-02, -9.9541400000e-02, -1.5764700000e-01,
                -1.4602400000e-01, 6.9223000000e-02,  4.3041200000e-01,
                4.9080200000e-01,  1.5839000000e-01,  8.3988500000e-03,
                7.6848400000e-04,  2.2714600000e-04},
      doubles_t{6.4100000000e+06, 9.5960000000e+05, 2.1830000000e+05,
                6.1810000000e+04, 2.0140000000e+04, 7.2640000000e+03,
                2.8320000000e+03, 1.1750000000e+03, 5.1260000000e+02,
                2.3300000000e+02, 1.0950000000e+02, 5.2860000000e+01,
                2.5840000000e+01, 1.2170000000e+01, 6.0300000000e+00,
                3.0120000000e+00, 1.5110000000e+00, 6.6040000000e-01,
                2.9260000000e-01, 1.2540000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5110000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{6.6040000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9260000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.5380800000e-07,  1.1965400000e-06,  6.2982800000e-06,
                2.6645000000e-05,  9.7416200000e-05,  3.1836000000e-04,
                9.5237700000e-04,  2.6243000000e-03,  6.6816000000e-03,
                1.5359500000e-02,  3.0943200000e-02,  5.0063800000e-02,
                4.8978200000e-02,  -2.6080700000e-02, -1.7842600000e-01,
                -3.3232400000e-01, -1.3200800000e-01, 4.4055600000e-01,
                6.1189100000e-01,  1.9317200000e-01},
      doubles_t{6.4100000000e+06, 9.5960000000e+05, 2.1830000000e+05,
                6.1810000000e+04, 2.0140000000e+04, 7.2640000000e+03,
                2.8320000000e+03, 1.1750000000e+03, 5.1260000000e+02,
                2.3300000000e+02, 1.0950000000e+02, 5.2860000000e+01,
                2.5840000000e+01, 1.2170000000e+01, 6.0300000000e+00,
                3.0120000000e+00, 1.5110000000e+00, 6.6040000000e-01,
                2.9260000000e-01, 1.2540000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2540000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{2.3570200000e-04, 2.0515800000e-03, 1.1154300000e-02,
                4.3981600000e-02, 1.2999400000e-01, 2.7295900000e-01,
                3.8369000000e-01, 2.9187000000e-01, 7.0446400000e-02,
                1.2876100000e-03, 1.8262300000e-03, 1.9901300000e-05},
      doubles_t{2.5480000000e+03, 6.0370000000e+02, 1.9560000000e+02,
                7.4150000000e+01, 3.0940000000e+01, 1.3690000000e+01,
                6.2290000000e+00, 2.8780000000e+00, 1.2820000000e+00,
                5.6410000000e-01, 2.3480000000e-01, 9.3120000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.2820000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{5.6410000000e-01}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-6.3541000000e-05, -5.5325900000e-04, -3.0279500000e-03,
                -1.2065000000e-02, -3.6634800000e-02, -7.9076400000e-02,
                -1.1742200000e-01, -8.6094300000e-02, 1.4030800000e-01,
                4.2233600000e-01, 4.4636300000e-01, 1.6663400000e-01},
      doubles_t{2.5480000000e+03, 6.0370000000e+02, 1.9560000000e+02,
                7.4150000000e+01, 3.0940000000e+01, 1.3690000000e+01,
                6.2290000000e+00, 2.8780000000e+00, 1.2820000000e+00,
                5.6410000000e-01, 2.3480000000e-01, 9.3120000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3480000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{9.3120000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.7810000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5290000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{6.1800000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.5000000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3450000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{6.5600000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{3.2000000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{1.3020000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{5.5600000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0530000000e+00}));
    return abs_t(name, 17, r0, shells.begin(), shells.end());
} // cc_dash_pv5z_17

} // namespace chemcache
