/*
 * Copyright 2025 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis.py is run.
 */

#include "aug_dash_cc_dash_pv_oparen_5_plus_d_cparen_z.hpp"
#include <simde/basis_set/atomic_basis_set.hpp>
#include <simde/types.hpp>

namespace chemcache {

using abs_t     = simde::type::atomic_basis_set;
using shell_t   = simde::type::shell;
using center_t  = simde::type::point;
using shells_t  = std::vector<shell_t>;
using doubles_t = std::vector<double>;
using pure_t    = chemist::ShellType;

abs_t aug_dash_cc_dash_pv_oparen_5_plus_d_cparen_z_12() {
    // Basis Set name and origin point
    std::string name("aug-cc-pv(5+d)z");
    center_t r0(0.0, 0.0, 0.0);

    auto make_shell = [&r0](auto pure, auto l, const doubles_t& cs,
                            const doubles_t& es) {
        return shell_t(pure, l, cs.begin(), cs.end(), es.begin(), es.end(), r0);
    };

    shells_t shells;
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{1.9717700000e-06,  1.5336200000e-05,  8.0685200000e-05,
                3.4077100000e-04,  1.2419400000e-03,  4.0412400000e-03,
                1.1979700000e-02,  3.2425300000e-02,  7.8933200000e-02,
                1.6657500000e-01,  2.8287100000e-01,  3.3189000000e-01,
                2.0328700000e-01,  3.8289700000e-02,  3.0891600000e-04,
                1.3890700000e-03,  -1.3615900000e-04, 8.5532200000e-05,
                -5.6910200000e-05, 1.7725900000e-05},
      doubles_t{2.9680000000e+06, 4.4430000000e+05, 1.0110000000e+05,
                2.8640000000e+04, 9.3430000000e+03, 3.3730000000e+03,
                1.3160000000e+03, 5.4580000000e+02, 2.3810000000e+02,
                1.0820000000e+02, 5.0800000000e+01, 2.4480000000e+01,
                1.1930000000e+01, 5.5430000000e+00, 2.6750000000e+00,
                1.2630000000e+00, 5.8830000000e-01, 1.4960000000e-01,
                6.7000000000e-02, 2.9520000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{-4.9816000000e-07, -3.8756300000e-06, -2.0385400000e-05,
                -8.6165900000e-05, -3.1417600000e-04, -1.0257700000e-03,
                -3.0581600000e-03, -8.4106300000e-03, -2.1120200000e-02,
                -4.7688200000e-02, -9.2411900000e-02, -1.4254800000e-01,
                -1.2616800000e-01, 7.1528200000e-02,  3.8303900000e-01,
                4.9013300000e-01,  2.0438100000e-01,  7.0223100000e-03,
                -2.6787400000e-03, 6.9369000000e-04},
      doubles_t{2.9680000000e+06, 4.4430000000e+05, 1.0110000000e+05,
                2.8640000000e+04, 9.3430000000e+03, 3.3730000000e+03,
                1.3160000000e+03, 5.4580000000e+02, 2.3810000000e+02,
                1.0820000000e+02, 5.0800000000e+01, 2.4480000000e+01,
                1.1930000000e+01, 5.5430000000e+00, 2.6750000000e+00,
                1.2630000000e+00, 5.8830000000e-01, 1.4960000000e-01,
                6.7000000000e-02, 2.9520000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{5.8830000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.4960000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{6.7000000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 0,
      doubles_t{9.6017500000e-08,  7.4616400000e-07,  3.9311900000e-06,
                1.6581200000e-05,  6.0625700000e-05,  1.9732200000e-04,
                5.9088100000e-04,  1.6190400000e-03,  4.0975600000e-03,
                9.2298900000e-03,  1.8216800000e-02,  2.8288400000e-02,
                2.6505900000e-02,  -1.7205300000e-02, -8.8591700000e-02,
                -1.6387100000e-01, -1.5950600000e-01, 3.2171500000e-01,
                5.9137300000e-01,  2.3686600000e-01},
      doubles_t{2.9680000000e+06, 4.4430000000e+05, 1.0110000000e+05,
                2.8640000000e+04, 9.3430000000e+03, 3.3730000000e+03,
                1.3160000000e+03, 5.4580000000e+02, 2.3810000000e+02,
                1.0820000000e+02, 5.0800000000e+01, 2.4480000000e+01,
                1.1930000000e+01, 5.5430000000e+00, 2.6750000000e+00,
                1.2630000000e+00, 5.8830000000e-01, 1.4960000000e-01,
                6.7000000000e-02, 2.9520000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{2.9520000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 0, doubles_t{1.0000000000e+00},
                                   doubles_t{1.0800000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{1.5240700000e-04, 1.3276400000e-03, 7.2193700000e-03,
                2.8520500000e-02, 8.6534600000e-02, 1.9495000000e-01,
                3.1205100000e-01, 3.4847600000e-01, 2.1888600000e-01,
                4.3557900000e-02, -3.7374700000e-03, 3.0512300000e-03,
                -8.6692200000e-04, 2.3051700000e-04},
      doubles_t{1.4410000000e+03, 3.4140000000e+02, 1.1070000000e+02,
                4.1970000000e+01, 1.7490000000e+01, 7.7530000000e+00,
                3.5340000000e+00, 1.6140000000e+00, 7.2990000000e-01,
                3.0290000000e-01, 1.5830000000e-01, 8.1900000000e-02,
                4.1230000000e-02, 1.9880000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5830000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{8.1900000000e-02}));
    shells.emplace_back(make_shell(
      pure_t::pure, 1,
      doubles_t{-2.4103100000e-05, -2.1080900000e-04, -1.1453000000e-03,
                -4.5641700000e-03, -1.3960300000e-02, -3.2110500000e-02,
                -5.1621700000e-02, -6.1371300000e-02, -4.4246500000e-02,
                5.2319100000e-02, 2.2169200000e-01, 3.9525500000e-01,
                3.6407800000e-01, 9.7795200000e-02},
      doubles_t{1.4410000000e+03, 3.4140000000e+02, 1.1070000000e+02,
                4.1970000000e+01, 1.7490000000e+01, 7.7530000000e+00,
                3.5340000000e+00, 1.6140000000e+00, 7.2990000000e-01,
                3.0290000000e-01, 1.5830000000e-01, 8.1900000000e-02,
                4.1230000000e-02, 1.9880000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{4.1230000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{1.9880000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 1, doubles_t{1.0000000000e+00},
                                   doubles_t{7.1000000000e-03}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{4.4531000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.1784000000e+00}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{3.7610000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{1.8100000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{7.4700000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 2, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7300000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{4.9170000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{2.7640000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5540000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 3, doubles_t{1.0000000000e+00},
                                   doubles_t{5.7900000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{4.4270000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{2.3110000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 4, doubles_t{1.0000000000e+00},
                                   doubles_t{9.4700000000e-02}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{3.7310000000e-01}));
    shells.emplace_back(make_shell(pure_t::pure, 5, doubles_t{1.0000000000e+00},
                                   doubles_t{1.5770000000e-01}));
    return abs_t(name, 12, r0, shells.begin(), shells.end());
} // aug_dash_cc_dash_pv_oparen_5_plus_d_cparen_z_12

} // namespace chemcache
