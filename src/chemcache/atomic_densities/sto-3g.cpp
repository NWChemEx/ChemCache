/*
 * Copyright 2022 NWChemEx-Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is autogenerated by: generate_basis_sets.py
 *
 * NOTE: Any modifications made in this file will be lost next time
 *       generate_basis_sets.py is run.
 */

#include "atomic_densities.hpp"
#include <simde/simde.hpp>

namespace chemcache {

using atomic_den_pt = simde::AtomDenFromZ;
using atomic_den_t  = std::vector<double>;

MODULE_CTOR(sto_dash_3g_atom_dm) { satisfies_property_type<atomic_den_pt>(); }

MODULE_RUN(sto_dash_3g_atom_dm) {
    const auto& [Z] = atomic_den_pt::unwrap_inputs(inputs);
    auto rv         = results();

    switch(Z) {
        case(1): {
            atomic_den_t atom_dm{
              1.00000000,
            };
            return atomic_den_pt::wrap_results(rv, atom_dm);
        }
        case(8): {
            atomic_den_t atom_dm{
              2.11870860,  -0.50150667, 0.00000000, 0.00000000, 0.00000000,
              -0.50150667, 2.11870860,  0.00000000, 0.00000000, 0.00000000,
              0.00000000,  0.00000000,  1.33333333, 0.00000000, 0.00000000,
              0.00000000,  0.00000000,  0.00000000, 1.33333333, 0.00000000,
              0.00000000,  0.00000000,  0.00000000, 0.00000000, 1.33333333,
            };
            return atomic_den_pt::wrap_results(rv, atom_dm);
        }
        default: {
            throw std::out_of_range("Atomic Density not available for Z");
        }
    }
}

} // namespace chemcache
